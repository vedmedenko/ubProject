{
  "id": "https://unitybase.info/models/UB/schemas/ubConfig.schema.json",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "UnityBase configuration",
  "description": "Property values in the configuration may include: <ul><li>`%ENV_VAR%` - will be replaced by value of OS environment variable with the same name</li><li>`\"#include(pathToFile)\"` - will be replace by content of file `pathToFile`</li><li>Can be combined as such: `\"#include(%UB_HOME%\\models\\defHeadersPostprocessors.json)\"`</li></ul>",
  "type": "object",
  "additionalProperties": false,
  "required": [],
  "defaultProperties": [],
  "properties": {
    "httpServer": {
      "type": "object",
      "description": "Built-in HTTP server configuration",
      "additionalProperties": false,
      "required": [  ],
      "defaultProperties": [
        "serverType",
        "protocol",
        "host",
        "port"
      ],
      "properties": {
        "serverType": {
          "enum": [
            "HTTPSys",
            "Socket",
            "None"
          ],
          "default": "HTTPSys",
          "description": "The type of HTTP server\n\n |Value  |Description\n|-\n| `None`|No HTTP server\n| `HTTPSys`| HTTP.sys kernel mode driver used. Fast, but require URL to be written to routing table using _ub -http register_ command \n| `Socket` | Plain socket powered by IOCP"
        },
        "protocol": {
          "enum": [
            "http",
            "https"
          ],
          "default": "http",
          "description": "Communication protocol. For SSL based protocols additional steps required for setting up a certificates. See <a href=\"/api/serverNew/tutorial-http_server.html\">this article</a>"
        },
        "host": {
          "type": "string",
          "default": "+",
          "description": "Host names for server. Could be either a fully qualified case-insensitive domain name, <br> an IPv4 or IPv6 literal string, <br> or a wildcard ('+' will bound to all domain names for the specified port, '*' will accept the request when no other listening hostnames match the request for that port"
        },
        "port": {
          "type": "string",
          "default": "888",
          "description": "Port to listen on"
        },
        "path": {
          "type": "string",
          "default": "/",
          "description": "Begin of URL to listen on. Server will listen on `protocol://host:port/path`.<br>Several HTTPSys based server instances can share the same `host:port` combinations with the different paths"
        },
        "additionalURLs": {
          "type": "Array",
          "description": "Additional URLs to listen on. Must be registered MANUALLY in the HTTP.SYS routing table",
          "items": {
            "type": "string",
            "description": "Full URL, for example `https://my.domain:443/` or `http://my.domain:80/path`"
          }
        },
        "threadPoolSize": {
          "type": "number",
          "minimum": 1,
          "maximum": 64,
          "description": "Working thread count. Default is `CPU count * 2`"
        },
        "inetPub": {
          "type": "string",
          "description": "Path to folder with static files, applicable to server. Model-specific files must be placed inside models `public` folder"
        },
        "inetIndex": {
          "type": "string",
          "description": "If a static file request ends with a slash, UB treats it as a request for a directory and tries to find an index file in the directory. The `inetIndex` directive defines the index file name (the default value is `index.html`)",
          "default": "index.html"
        },
        "headersPostprocessors": {
          "type": "array",
          "description": "Rules, applied to static-files responses. Response headers can be overrated here",

          "items": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "#include\\(.+\\)"
              },
              {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Rule name"
                  },
                  "location": {
                    "type": "string",
                    "description": "Regular expression. If static file response file name much this regExp, rule is applied"
                  },
                  "useETag": {
                    "type": "boolean",
                    "description": "FileAge will be used as ETag header value. Also Last-Modified header will be added to work correctly with HTTP 1.0 based proxy (squid <= 3.2)"
                  },
                  "expires": {
                    "type": "number",
                    "description": "Values in seconds for adding `Expires: ServerStartDate + expires` header. Do not set this value to more than one year (HTTP protocol not allow this).<br> Google recomendation: We prefer Expires over Cache-Control: max-age because it is is more widely supported see it <a href=\"https://developers.google.com/speed/docs/best-practices/caching\">here</a>"
                  },
                  "addHeader": {
                    "type": "string",
                    "description": "Add any header(s) to response. Example: `\"Cache-Control: max-age=7776000\"` (space after **:** is IMPORTANT!)"
                  },
                  "usePreparedGzip": {
                    "type": "boolean",
                    "description": "If `true` and request header contain Accept-Encoding: *gzip*, then server seek for file with name fileName + '.gz' and if present - send content of this file,together with header  \"Content-Encoding: gzip\". See also `ub cmp/prepareGZIP` command"
                  }
                }
              }
            ]
          }
        },
        "watchFileChanges": {
          "type": "object",
          "description": "Enable watching of `inetPub` & model folders modification",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": "false",
              "description": "If `true` server will recalculate UB_STATIC.* GlobalCache entries each time something changes. Set it to `false` in case you restart production server during version update"
            },
            "hashingStrategy": {
              "enum": [
                "ContentMD5",
                "ModifyDate"
              ],
              "default": "ContentMD5",
              "description": "How to calculate hash of folders\n\n |Value  |Description\n|-\n| `ContentMD5`| Folder hash is a MD5 of all it content. Slow, but strongly recommended on production (together with enabled: false).<br> In this case even if you copy new files with same content, folder checksum do not changed and proxy/browser cache will continue to use cached data\n| `ModifyDate`| Fast, usd for for developer purpose"
            }
          }
        },
        "requestQueueLength": {
          "type": "number",
          "default": 1000,
          "description": "Only for HTTPSys server type. Request/responce queue length. <br> Increase this value in case of many 503 HTTP responses or in case in HTTP.sys log files (normally in _C:\\Windows\\System32\\LogFiles\\HTTPERR\\httperr\\*.log_) you see QueueFull messages"
        },
        "maxBandwidth": {
          "type": "number",
          "default": 0,
          "description": "The maximum allowed bandwidth rate in bytes per second (via HTTP API 2.0). Setting this value to 0 allows an unlimited bandwidth (default)"
        },
        "maxConnections": {
          "type": "number",
          "default": 0,
          "description": "The maximum number of HTTP connections allowed (only for Vista+ or Windows Server2008+).<br>Setting this value to 0 allows an unlimited number of connections (default)"
        },
        "allowCORSFrom": {
          "type": "string",
          "description": "Origins for cross-origin resource sharing (CORS). See <a href=\"https://developer.mozilla.org/en-US/docs/HTTP/Access_control_CORS\">mozilla documentation</a><br>Can be set e.g. to '\"*\"' to allow requests from any sites, or specify an URI to be allowed as origin (e.g. 'http://foo.example'). By default (empty) CORS are not allowed"
        },
        "remoteIPHeader": {
          "type": "string",
          "description": "The value of a custom HTTP header containing the real client IP. By default, the RemoteIP information will be retrieved from the socket layer - but if the server runs behind some proxy service, you should define here the HTTP header name which indicates the true remote client IP value, mostly as 'X-Real-IP' or 'X-Forwarded-For'",
          "default": ""
        },
        "compression": {
          "enum": [
            "zip",
            "deflate"
          ],
          "default": "zip",
          "description": "Enable traffic compression. For individual response compression applied if response body size > 1024 and request contains Accept-Encoding: header"
        },
        "timeouts": {
          "type": "object",
          "description": "For advanced use only! Will override a http protocol timeouts. See <a href=\"https://msdn.microsoft.com/en-us/library/windows/desktop/aa364661(v=vs.85).aspx\">this article</a> for details",
          "additionalProperties": false,
          "defaultProperties": [
            "entityBody",
            "drainEntityBody",
            "requestQueue",
            "idleConnection",
            "headerWait",
            "minSendRate"
          ],
          "properties": {
            "entityBody": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for the request entity body to arrive"
            },
            "drainEntityBody": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for the HTTP Server API to drain the entity body on a Keep-Alive connection"
            },
            "requestQueue": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for the request to remain in the request queue before the application picks it up"
            },
            "idleConnection": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for an idle connection"
            },
            "headerWait": {
              "type": "number",
              "default": 120,
              "description": "The time, in seconds, allowed for the HTTP Server API to parse the request header"
            },
            "minSendRate": {
              "type": "number",
              "default": 150,
              "description": "Set it to 0 to remove limit at all. The minimum send rate, in bytes-per-second, for the response. The default response send rate is 150 bytes-per-second"
            }
          }
        }
      }
    },
    "wsServer": {
      "type": "object",
      "description": "Built-in WebSocket server configuration",
      "additionalProperties": false,
      "required": [ ],
      "defaultProperties": [
        "protocol",
        "host",
        "port",
        "path"
      ],
      "properties": {
        "protocol": {
          "enum": [
            "ws",
            "wss"
          ],
          "default": "ws",
          "description": "Communication protocol"
        },
        "host": {
          "type": "string",
          "default": "",
          "description": "Host names for server. See `httpServer.host` for details. If empty - WS server do not run at all"
        },
        "port": {
          "type": "string",
          "default": "888",
          "description": "Port to listen on"
        },
        "path": {
          "type": "string",
          "default": "/",
          "description": "Begin of URL to listen on. Server will listen on `protocol://host:port/path`"
        },
        "threadPoolSize": {
          "type": "number",
          "minimum": 1,
          "maximum": 64,
          "default": 1,
          "description": "Working thread count. Default is 1"
        },
        "pingTimeout": {
          "type": "number",
          "minimum": 0,
          "default": 0,
          "description": "Ping (verification of the fact that the WS connection is alive) in seconds. 0 means no ping send."
        }
      }
    },
    "logging": {
      "type": "object",
      "description": "Logging configuration",
      "properties": {
        "levels": {
          "type": "array",
          "description": "Type of events to put to log file. \"*\" - all events. To enable logging of a remote debug protocol on log level Custom4 set an environment variable FF_RDP_DEBUG=true",
          "_format": "table",
          "default": [
            "LastError",
            "Error",
            "Exception",
            "ExceptionOS"
          ],
          "items": {
            "enum": [
              "*",
              "Info",
              "Debug",
              "Trace",
              "Warning",
              "Error",
              "Enter",
              "Leave",
              "LastError",
              "Exception",
              "ExceptionOS",
              "Memory",
              "StackTrace",
              "Fail",
              "SQL",
              "Cache",
              "Result",
              "DB",
              "HTTP",
              "Client",
              "Server",
              "ServiceCall",
              "ServiceReturn",
              "UserAuth",
              "Custom1",
              "Custom2",
              "Custom3",
              "Custom4",
              "NewRun",
              "Monitoring"
            ]
          }
        },
        "path": {
          "type": "string",
          "default": ".\\\\log",
          "description": "Path to folder where server place log files (including rotated logs)"
        },
        "rotationSizeInMB": {
          "type": "number",
          "default": 100,
          "minimum": 0,
          "maximum": 2048,
          "description": "If log file reaches this size, it will be rotated. 0 mean no rotation. If !==0 then `threadingModel` will switch to `IdentifiedInOnFile`"
        },
        "threadingModel": {
          "default": "IdentifiedInOnFile",
          "description": "How threads write information to log\n\n |Value  |Description\n|-\n| `OneFilePerThread`|will create one .log file per thread(fastest)\n| `MergedInOneFile`| will indicate that all threads are logged in the same file, in occurence order\n| `IdentifiedInOnFile` | like MergedInOneFile, but a new column will be added for each log row, with the corresponding ThreadID",
          "enum": [
            "OneFilePerThread",
            "MergedInOneFile",
            "IdentifiedInOnFile"
          ]
        },
        "slowQueryThreshold": {
          "type": "number",
          "default": 200,
          "description": "If database query execution (**including** fetching data) exceed this time (in millisecond) such query will be put in the log with logLevel `Custom2`"
        },
        "flushTimeOut": {
          "type": "number",
          "default": 10,
          "description": "The time (in seconds) after which the log content must be written on disk, whatever the current content size is. In all case the log file will be written for every 4 KB of log"
        },
        "stackTrackDepth": {
          "type": "number",
          "default": 0,
          "minimum": 0,
          "maximum": 255,
          "description": "The recursive depth of stack trace symbol to write. Used only if exceptions are handled, or by StackTrace level. 0 mean no stack trace"
        },
        "performanceCounters": {
          "type": "boolean",
          "default": true,
          "description": "Enable Windows Performance Counters Set with name _UnityBase_. Set must be registered using `ub -perf` command. See <a href=\"https://dev.softengi.com/confluence/pages/viewpage.action?pageId=72909043\">this article</a> for details"
        }
      }
    },
    "javascript": {
      "type": "object",
      "description": "JavaScript VM configuration",
      "properties": {
        "timeout": {
          "type": "number",
          "default": -1,
          "description": "Script execution timeout (in seconds). -1 mean unlimited"
        },
        "lifetimeInMinutes": {
          "type": "number",
          "default": 360,
          "description": "Context lifetime (in minutes). After this period context will be recreated. Set to small value if your application have a memory leak inside JS"
        },
        "fullGCPeriod": {
          "type": "number",
          "default": 100,
          "minimum": 1,
          "description": "Number of incoming request handled by current thread after which server perform a full GC. Setting this number to small value will slow down the server, but help to protect against `out of memory` in bad designed code. Full garbage collection is a long operation, so setting this parameter to small value will slow down a server"
        },
        "maxPerEngineMemory": {
          "type": "number",
          "default": 512,
          "minimum": 32,
          "maximum": 2028,
          "description": "Maximum amount of memory (in megabytes) accessible for one JS engine. Every thread have his own engine and all threads share the same process memory (max 3.7Gb for 32 bit app). It is important to find a balance between the number of threads and maxPerEngineMemory"
        },
        "maxRecursionDepth": {
          "type": "number",
          "default": 32,
          "description": "Maximum recursion depth"
        },
		"debuggerListenOn": {
			"type": "string",
			"default": "6000",
			"description": "[IP_Adress:]port whre remote debugger is listen on. If IP_Adress is omitted - 0.0.0.0 will be used. Debuger enabled only in -dev mode"
		}
      }
    },
    "security": {
      "type": "object",
      "description": "Security settings",
      "properties": {
        "authenticationMethods": {
          "type": "array",
          "description": "List of supported authentication methods",
          "items": {
            "enum": [
              "CERT",
              "Negotiate",
              "UBLDAP",
              "UB",
              "Basic",
              "UBIP",
              "OpenIDConnect"
            ]
          }
        },
        "forceNTLM": {
          "type": "boolean",
          "default": true,
          "description": "Will force a NTLM usage for Negotiate authentication method. If false - Kerberos will be used in most case"
        },
	"simpleCertAuth": {
	  "type": "boolean",
          "default": false,
          "description": "If `true` will not require password for CERT authentication (only secret key passrord is required)"
        },
        "ldapCatalogs": {
          "type": "array",
          "description": "If `userName` passed to `auth` in form `DOMAIN\\domainUser` and `UBLDAP` is present in `authenticationMethods` user credentials will be checked by request to LDAP catalog",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of domain"
              },
              "catalogType": {
                "enum": [
                  "Internal",
                  "LDAP"
                ],
                "default": "LDAP",
                "description": "Type of LDAP catalog. `Internal` is reserved for future use"
              },
              "host": {
                "type": "string",
                "description": "LDAP server host"
              },
              "port": {
                "type": "string",
                "description": "LDAP server port"
              },
              "useTLS": {
                "type": "boolean",
                "description": "Use TLS for accessing LDAP server",
                "default": false
              },
              "useSSL": {
                "type": "boolean",
                "description": "Use SSL for accessing LDAP server",
                "default": false
              },
              "useSasl": {
                "type": "boolean",
                "description": "Use Sasl for accessing LDAP server",
                "default": false
              }
            }
          }
        },
        "jsonRequestsOnly": {
          "type": "boolean",
          "default": false,
          "description": "Limit request types only to JSON requests"
        },
        "dstu": {
          "type": "object",
          "description": "For Ukraine govermenet services only",
          "properties": {
            "iit": {
              "type": "object",
              "description": "IIT library configuration",
              "properties": {
                "libraryPath": {
                  "type": "string"
                },
                "mediaType": {
                  "type": "number",
                  "description": "порядковый индекс типа устройства начинактся с 0. на экране считать сверху вниз"
                },
                "mediaNumber": {
                  "type": "number",
                  "description": "порядковый индекс устройства начинактся с 0"
                },
                "keyPath": {
                  "type": "string",
                  "description": "full path to keystore for filesystem based media type"
                },
                "password": {
                  "type": "string",
                  "description": "keystore password"
                }
              }
            },
            "findCertificateBySerial": {
              "type": "boolean",
              "default": false,
              "description": "Used with `CERT` authentication to force search for user certificates only by by serial number (without issuer)"
            },
            "novaLib": {
              "type": "object",
              "description": "novaLib configuration",
              "properties": {
                "keyStorage": {
                  "type": "string",
                  "description": "full path to keystore"
                },
                "keyStoragePin": {"type": "string"},
                "keyName": {"type": "string"}
              }
            },
            "trafficEncryption": {
              "type": "boolean",
              "default": false,
              "description": "encrypt client<->server traffic using DSTU algorithm. `novaLib` is required for encryption"
            },
            "nonEncryptedIPs": {
              "type": "array",
              "description": "IP addresses for witch DSTU encryption are disabled",
              "items": {
                "type": "string"
              }
            },
            "encryptionKeyLifeTime": {
              "type": "number",
              "default": 0,
              "description": "timeout in seconds after witch client must change encryption key. 0 - unlimited"
            }
          }
        }
      }
    },
    "application": {
      "type": "object",
      "description": "Business logic configuration",
      "properties": {
        "schedulers": {
          "type": "object",
          "description": "Schedulers",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": "true",
              "description": "If `false` all scheduler jobs are disabled for this application"
            }
          }
	    },
	    "rootHandler": {
          "type": "string",
          "description": "Either a endpoint name (method added via `App.registerEndpoint`) or static file from `inetPub` returned during request to `/`",
          "default": "index.html"
        },
        "defaultLang": {
          "type": "string",
          "description": "In case application support internationalization - default locale"
        },
        "domain": {
          "type": "object",
          "description": "Application domain",
          "properties": {
            "models": {
              "type": "array",
              "description": "Domain models. Loaded in the order in which they appear in this array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "unique": true
                  },
                  "path": {
                    "type": "string",
                    "description": "Path to model folder. All *.meta and *.js will be loaded from this path and it's subdirectory"
                  },
                  "publicPath":{
                    "type": "string",
                    "default": "path + '\\public'",
                    "description": "Starting from UB4 - path to public model folder. In UB<4 always === \"path + '\\public'"
                  }
                }
              }
            },
            "implicitlyAddedMixins": {
              "type": "array",
              "description": "An array of names of the mixins, which will be added to each entity. <br> For individual entity mixin can be disabled by setting `mixins.mixinName.enabled: false` in the `meta` file",
              "default": ["audit"],
              "items": {
                "type": "string"
              }
            }
          }
        },
        "connections": {
          "type": "array",
          "description": "Database connections. Main article is <a href=\"https://dev.softengi.com/confluence/pages/viewpage.action?pageId=65274525#Installation(requirements)-Databaseaccessrequirements\">here</a> Tips: <ul><li>You can use oracle client without install it. Just copy files distributed with <a href=\"http://www.oracle.com/technetwork/database/features/instant-client/index-097480.html\">Oracle Instant Client</a> to the bin\\OracleInstantClient</li><li>To prevent storing oracle credential in config you can use <a href=\"For details see here: https://enviance.softline.kiev.ua/confluence/pages/viewpage.action?pageId=65274525\">Oracle Wallet</a></li><li>to prevent Oracle client disconnect in case on inactivity add the SQLNET.EXPIRE_TIME to the sqlnet.ora file on the server and set it and set it to some interval (10 for example)</li></ul>",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "unique": true,
                "description": "Unique connection name. This name is used inside `meta` file to identify where entity are persisted"
              },
              "isDefault": {
                "type": "boolean",
                "description": "Is this connection is default for application i.e used for entities without `connectionName` defined"
              },
              "statementCacheSize": {
                "type": "number",
                "description": "The number of prepared statements, cached by database driver on the client (UB) side",
                "default": 30
              },
              "driver": {
                "enum": [
                  "Oracle",
                  "MSSQL2008OleDB",
                  "MSSQL2012OleDB",
                  "MSSQLODBC",
                  "SQLite3",
                  "PostgreSQL",
                  "PostgreSQLODBC",
                  "Firebird",
                  "MySQL"
                ],
                "description": "Database driver used for connection"
              },
              "dialect": {
                "enum": [
                  "AnsiSQL",
                  "Oracle9",
                  "Oracle10",
                  "Oracle11",
                  "MSSQL2008",
                  "MSSQL2012",
                  "SQLite3",
                  "PostgreSQL",
                  "Firebird",
                  "MySQL"
                ],
                "description": "Database dialect. We need it to properly optimize ORM for new database features",
                "default": "AnsiSQL"
              },
              "serverName": {
                "type": "string",
                "description": "Database host\n\n |DBMS  |Format|Example\n|-\n| `MS SQL`|[protocol:]hostname or IP[\\instanceName]| example1: `\"SQLSERVER1\\instance2\"` <br> example2: \"tcp:SQL_SERVER12\" \n| `Oracle`| TNS_NAME or <br> TNS definition string| example1: \"MyOraTNSName\"<br>example: \"(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=do5-s8)(PORT=1521))(CONNECT_DATA=(SERVICE_NAME=ORAUTC)))\" \n| `Postgre` | protocol://host:port | \"postgresql://dodb3-s8:5432\""
              },
              "databaseName": {
                "type": "string",
                "description": "Name of the database\n\n |DBMS  |Mean|Example\n|-\n| `MS SQL`|Name of a database| \"myDatabase\" \n| `Oracle`| not applicable|  \n| `Postgre` | Name of a database | \"postgres\" \n| `SQLite3`|Full path to database file. **Don`t use UNC path here - only local file system files is allowed**| \"d:\\myDB\\myDatabase.db\""
              },
              "userID": {
                "type": "string",
                "description": "Name of user\n\n |DBMS  |Mean\n|-\n| `MS SQL`|User name for mixed authentication. \"\" for SSPI.\n| `Oracle`| Role name or \"\" in case of using `oracle wallet`\n| `Postgre` | Schema owner \n| `SQLite3`|Not applicable"
              },
              "password": {
                "type": "string",
                "description": "Password (if applicable)"
              },
              "supportLang": {
                "type": "array",
                "description": "Array of supported locales (applicable to multi-language attributes) for current connection",
                "items": {
                  "type": "string"
                }
              },
              "executeWhenConnected": {
                "type": "array",
                "description": "Statements, which executed when new database connection is established<br>For example: [\"ALTER SESSION SET NLS_COMP=LINGUISTIC\",\"ALTER SESSION SET NLS_SORT=BINARY_CI\"]",
                "items": {
                  "type": "string"
                }
              },
              "advSettings": {
                "type": "string",
                "description": "Advanced driver settings\n\n |DBMS| Value  | Description \n|-\n|`Postgre`|LibLocation=`Path to 32bit libpq.dll`| \"LibLocation=C:\\Program Files\\PostgreSQL (x86)\\9.3\\bin\\libpq.dll\"\n| `Oracle`| Combination of `MANY=hint` `ONE=hint` `INLINE_IN` `USE_WALLET`<br>INLINE_IN - do not use array bindings for `in` and `not in` condition | \"MANY=\\/*+ NO_CPU_COSTING *\\/,ONE=\\/*+ NO_CPU_COSTING *\\/INLINE_IN USE_WALLET\" \n| `SQLIte3` | [Synchronous=Full or Off or Normal],[Tokenizer=stemka,TokenizerParams=\"stem=yes or no\" \"lang=uk or ru or en\"]"
              }
            }
          }
        },
        "blobStores": {
          "type": "array",
          "description": "Database connections definition for application",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "unique": true,
                "description": "Unique blobStore name. This name is used in `meta` file to determine where the attributes of the type `Document` store their content"
              },
              "storeType": {
                "enum": ["FileSystem", "Database", "Virtual"],
                "default": "FileSystem"
              },
              "isDefault": {
                "type": "boolean",
                "description": "Is this store default for application. i.e. used for `Document` type entity attributes without store name defined"
              },
              "implementedBy": {
                "type": "string",
                "description": "Applicable for `storeType: \"Virtual\"`. Name of then `UB.virtualStores` member witch implement virtualStores interface"
              },
              "path": {
                "type": "string",
                "description": "If `storeType: \"FileSystem\"` then  path to store root folder, if `storeType: \"Database\"` then name of a table or view where BLOB are stored"
              },
              "connectionName": {
                "type": "string",
                "description": "Applicable for `storeType: \"Database\"`. Name of the connection where table with BLOBS are placed. If empty - will use the default connection"
              },
              "historyDepth": {
                "type": "number",
                "description": "Depth of revision history. 0 means no history",
                "default": 0
              },
              "storeSize": {
                "enum": ["Simple", "Medium", "Large"],
                "description": "Approximate number of files to store\n\n |Value  |Description\n|-\n| `Simple`|Up to 10000\n| `Medium`| Up to 500 000\n| `Large` | More when 500 000",
                "default": "Simple"
              },
              "keepOriginalFileNames":{
                "type": "boolean",
                "default": false,
                "description": "Put files into store using it original file names. If the same store is used for several entity/attribute client MUST guaranty unique file names between entities/attributes (e.g. use different prefix for different entity+attribute combination)"
              }
            }
          }
        },
        "customSettings": {
          "type": "object",
          "description": "Any settings, accessible inside server-side js using `App.customSettings`",
          "additionalProperties": true
        },
        "fts": {
          "type": "object",
          "description": "Build-in Full Text Search engine settings",
          "properties": {
            "enabled": {
              "type": "boolean",
              "default": false
            },
            "async": {
              "type": "boolean",
              "default": false
            }
          }
        }
      }
    },
    "uiSettings": {
      "type": "object",
      "description": "Settings, passed to UI in getAppInfo method. We recommend to place here ONLY parameters, necessary for UI initialization",
      "additionalProperties": false,
      "properties": {
        "adminUI": {
          "type": "object",
          "description": "Settings for admin UI",
          "additionalProperties": false,
          "properties": {
            "applicationName": {
              "type": ["string", "object"],
              "description": "Name of application for show on the login form. In case explicity defined as empty string - not shown in login form. For localization can be specified as object with keys=locale: {\"en\": \"My App\", \"uk\": \"miy dodatok\"}",
              "default": "UnityBase"
            },
            "applicationTitle": {
              "type": "string",
              "description": "Title of HTML page for adminUI",
              "default": "UnityBase"
            },
            "defaultPasswordForDebugOnly": {
              "type": "string",
              "description": "For development purpose only"
            },
            "themeName": {
              "type": "string",
              "description": "UI theme name. Can be name of a folder in the `inetPub\\themes\\` folder",
              "default": "UBtheme"
            },
			"loginWindowTopLogoURL": {
			  "type": "string",
              "description": "Optional URL for a logo to display on the top of login form. Logo stretched to 150px height, so it is a good idea for logo to be 150x150px"
			},
            "endpoint": {
              "type": "string",
              "description": "The entry point for a adminUI interface. In case both adminUI & portalUI is used on the same instance set this parameter to something long and unique to prevent hacking",
              "default": "equal to application.rootHandler"
            },
            "messenger": {
              "type": "object",
              "description": "Messenger config",
              "properties": {
                "enabled": {
                  "type": "boolean"
                },
                "checkInterval": {
                  "type": "number",
                  "description": "Long pooling time (in seconds)"
                }
              }
            },
            "encryptionImplementation" : {
              "type": "string",
              "description": "Define encryption implementation for authentication CERT. By default @ub-d/nm-dstu/injectEncription.js"
            },
            "authenticationCert": {
              "type": "object",
              "description": "Config for authentication CERT",
              "properties": {
                "requireUserName": {
                  "type": "boolean",
                  "description": "Show user name field when enabled simpleCerAuth"
                },
                "userNameRE": {
                  "type": "String",
                  "description": "Regular expression for user name validation"
                },
                "userNameREMessage": {
                  "type": "String",
                  "description": "Message for user name validation"
                },
                "description": {
                  "type": "String",
                  "description": "Description that show below username and password"
                }
              }
            },
            "linter": {
              "type": "object",
              "description": "JavaScript linter options - used in adminUI form editor & shortcut editor. See <a href=\"http://jshint.com/docs/options/\">JSHINT documentation</a> for full options list"
            },
            "onlyOffice": {
              "type": "object",
              "description": "Configuration options for OnlyOffice ",
              "properties": {
                "serverIP": {
                  "type": "string",
                  "description": "IP address and port where OnlyOffice document server can be found in format 'ip:port'"
                }
              }
            },
			"favoriteCategoryCount": {
			  "type": "number",
              "description": "Number of categories (up to 4) for a favorites columnus",
              "default": 2
			}
          }
        },
        "portalUI": {
          "type": "object",
          "description": "Settings for portal UI",
          "additionalProperties": true
        },
        "nativeUI": {
          "type": "object",
          "description": "Settings for Android/iOS client",
          "additionalProperties": true
        }
      }
    },
    "licenseFilePath": {
      "type": "string",
      "description": "For EE/DE editions - path to license file",
      "default": "./UB.lic"
    }
  }
}