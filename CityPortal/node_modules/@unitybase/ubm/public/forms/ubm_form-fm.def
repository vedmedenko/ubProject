// @! "do not remove comments below unless you know what you do!"
// @isDefault "true"
// @entity "ubm_form"
// @model "UBM"
// @formType "auto"
// @caption "Form editor"
// @description "Form editor"
exports.formDef = {
    requires: ['UB.ux.designer.VisualDesigner'],

    parentConfig: {
        layout: 'hbox',
        align: 'stretch'
    },

    dockedItems: [{
        xtype: "toolbar",
        dock: "top",
        items: [{
            orderId: 4,
            actionId: "save"
        }]
    }],
    items: [{
        xtype: "tabpanel",
        height: '100%',
        flex: 1,
        items: [{
            title: UB.i18n('formBaseProperty'),
	          tabID: 'formBaseProperty',
            layout: 'vbox',
            defaults: {
                labelAlign: "left",
                width: "100%",
                labelWidth: 130
            },

            items: [{
                xtype: 'commandbuilderentitiescombobox',
                attributeName: "entity"
            }, {
              attributeName: "model"
            },
            {
              layout: 'hbox',
              items: [
                {
                  labelWidth: 130,
                  attributeName: "code"
              	}, {xtype: 'ublabel',
                  ubID: 'howToChangeCode',
                  text: "To change existing form code rename both *-fm.js and *-fm.def files in folder 'yourModel\\public\\forms'",
                  margins: '10px 0 0 0'
                }
              ]
            }, {
                attributeName: "description"
            }, {
                attributeName: "caption"
            }, {
                attributeName: "formType"
            }, {
                attributeName: "isDefault",
                labelAlign: "left"
            }, {
                xtype: 'label',
                ubID: 'newFormTip',
                style: {
                    backgroundColor: 'yellow'
                },
                text: 'TIP: In case of new form save it before going to "' + UB.i18n('formDefinition') + ' or ' + UB.i18n('formModule') + ' tab for definition boilerplate generation'
            }]
        }, {
            title: UB.i18n('formDefinition'),
            layout: 'hbox',
	    tabID: 'formDefinition',
            isDefifnition: true,
            items: [{
                width: 150,
                height: "100%",
                stateful: true,
                stateId: UB.core.UBLocalStorageManager.getKeyUI("ubm_form_side"),
                layout: 'vbox',
                bodyStyle: 'background:white;',
                items: [{
                    xtype: "commandbuilderentitytreepanel",
                    cbID: "1",
                    //height: "100%",
                    width: "100%",
                    //autoScroll: true,
                    flex: 1
                }]
            }, {
                xtype: "splitter"
            }, {
                attributeName: "formDef",
                expanded: true,
                bypassCache: true,
                //forceMIME: "application/def",
                documentMIME: "application/def",
                keepCmpOnRefresh: true,
                height: '100%',
                flex: 1,
                style: {
                    background: "white"
                },
                cmpConfig: {
                  codeSnippetsGetter: function(multilinePrefix) {
                    return this.up('basepanel').doOnGetSnipped('formDef', multilinePrefix)
                  }
                }
            }]
        }, {
            title: UB.i18n('formModule'),
            layout: 'hbox',
	    tabID: 'formMethods',
	    isFormModule: true,
            items: [{
                width: 150,
                height: "100%",
                stateful: true,
                stateId: UB.core.UBLocalStorageManager.getKeyUI("ubm_form_side"),
                layout: 'vbox',
                bodyStyle: 'background:white;',
                items: [{
                    xtype: "commandbuilderentitytreepanel",
                    cbID: "2",
                    width: "100%",
                    flex: 1
                }]
            }, {
                xtype: "splitter"
            }, {
                attributeName: "formCode",
                expanded: true,
                bypassCache: true,
                //forceMIME: "application/json",
                documentMIME: "application/json",
                keepCmpOnRefresh: true,
                height: '100%',
                flex: 1,
                style: {
                    background: "white"
                },
                cmpConfig: {
                  codeSnippetsGetter: function(multilinePrefix) {
                    return this.up('basepanel').doOnGetSnipped('formCode', multilinePrefix)
                  }
                }
            }]
        }, {
            title: UB.i18n('Visual designer'),
	    tabID: 'VisualDesigner',
            layout: {
                type: 'hbox',
                align: 'stretch'
            },
            html: 'The visual designer do not work with type of this form.',
            isDesigner: true,
            items: {
                xtype: 'UBVDesigner',
                flex: 1
            }
        }]
    }]
};