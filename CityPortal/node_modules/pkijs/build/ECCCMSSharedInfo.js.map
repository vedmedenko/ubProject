{"version":3,"sources":["../src/ECCCMSSharedInfo.js"],"names":["asn1js","ECCCMSSharedInfo","parameters","keyInfo","defaultValues","entityUInfo","suppPubInfo","fromSchema","schema","asn1","compareSchema","names","blockName","verified","Error","result","valueBlock","value","outputArray","push","toSchema","Constructed","idBlock","tagClass","tagNumber","Sequence","_object","toJSON","memberName","OctetString","memberValue","isEqual","name","optional"],"mappings":"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","file":"ECCCMSSharedInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6318\r\n */\r\nexport default class ECCCMSSharedInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ECCCMSSharedInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description keyInfo\r\n\t\t */\r\n\t\tthis.keyInfo = getParametersValue(parameters, \"keyInfo\", ECCCMSSharedInfo.defaultValues(\"keyInfo\"));\r\n\r\n\t\tif(\"entityUInfo\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {OctetString}\r\n\t\t\t * @description entityUInfo\r\n\t\t\t */\r\n\t\t\tthis.entityUInfo = getParametersValue(parameters, \"entityUInfo\", ECCCMSSharedInfo.defaultValues(\"entityUInfo\"));\r\n\r\n\t\t/**\r\n\t\t * @type {OctetString}\r\n\t\t * @description suppPubInfo\r\n\t\t */\r\n\t\tthis.suppPubInfo = getParametersValue(parameters, \"suppPubInfo\", ECCCMSSharedInfo.defaultValues(\"suppPubInfo\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\t\treturn new AlgorithmIdentifier();\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn new asn1js.OctetString();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"keyInfo\":\r\n\t\t\tcase \"entityUInfo\":\r\n\t\t\tcase \"suppPubInfo\":\r\n\t\t\t\treturn (memberValue.isEqual(ECCCMSSharedInfo.defaultValues(memberName)));\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ECCCMSSharedInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//ECC-CMS-SharedInfo  ::=  SEQUENCE {\r\n\t\t//    keyInfo      AlgorithmIdentifier,\r\n\t\t//    entityUInfo  [0] EXPLICIT OCTET STRING OPTIONAL,\r\n\t\t//    suppPubInfo  [2] EXPLICIT OCTET STRING }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [keyInfo]\r\n\t\t * @property {string} [entityUInfo]\r\n\t\t * @property {string} [suppPubInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tAlgorithmIdentifier.schema(names.keyInfo || {}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.entityUInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.suppPubInfo || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.OctetString()]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tECCCMSSharedInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tkeyInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"keyInfo\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tentityUInfo: \"entityUInfo\",\r\n\t\t\t\t\tsuppPubInfo: \"suppPubInfo\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ECC_CMS_SharedInfo\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.keyInfo = new AlgorithmIdentifier({ schema: asn1.result.keyInfo });\r\n\r\n\t\tif(\"entityUInfo\" in asn1.result)\r\n\t\t\tthis.entityUInfo = asn1.result.entityUInfo.valueBlock.value[0];\r\n\r\n\t\tthis.suppPubInfo = asn1.result.suppPubInfo.valueBlock.value[0];\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create output array for sequence \r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(this.keyInfo.toSchema());\r\n\t\t\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.entityUInfo]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\tidBlock: {\r\n\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t},\r\n\t\t\tvalue: [this.suppPubInfo]\r\n\t\t}));\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t});\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tkeyInfo: this.keyInfo.toJSON()\r\n\t\t};\r\n\r\n\t\tif(\"entityUInfo\" in this)\r\n\t\t\t_object.entityUInfo = this.entityUInfo.toJSON();\r\n\r\n\t\t_object.suppPubInfo = this.suppPubInfo.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}