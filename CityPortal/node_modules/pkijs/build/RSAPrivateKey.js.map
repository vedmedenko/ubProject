{"version":3,"sources":["../src/RSAPrivateKey.js"],"names":["asn1js","RSAPrivateKey","parameters","version","defaultValues","modulus","publicExponent","privateExponent","prime1","prime2","exponent1","exponent2","coefficient","otherPrimeInfos","fromSchema","schema","fromJSON","json","asn1","compareSchema","names","otherPrimeInfo","blockName","verified","Error","result","valueBlock","valueDec","convertFromDER","Array","from","element","outputArray","push","Integer","value","convertToDER","Sequence","toSchema","jwk","n","valueHex","e","d","p","q","dp","dq","qi","oth","toJSON","memberName","name","optional","Repeated","otherPrimeInfosName"],"mappings":";;;;;;;;AAAA;;IAAYA,M;;AACZ;;AACA;;;;;;;;;;AACA;AACA;;;IAGqBC,a;AAEpB;AACA;;;;;AAKA,0BACA;AAAA,MADYC,UACZ,uEADyB,EACzB;;AAAA;;AACC;AACA;;;;AAIA,OAAKC,OAAL,GAAe,iCAAmBD,UAAnB,EAA+B,SAA/B,EAA0CD,cAAcG,aAAd,CAA4B,SAA5B,CAA1C,CAAf;AACA;;;;AAIA,OAAKC,OAAL,GAAe,iCAAmBH,UAAnB,EAA+B,SAA/B,EAA0CD,cAAcG,aAAd,CAA4B,SAA5B,CAA1C,CAAf;AACA;;;;AAIA,OAAKE,cAAL,GAAsB,iCAAmBJ,UAAnB,EAA+B,gBAA/B,EAAiDD,cAAcG,aAAd,CAA4B,gBAA5B,CAAjD,CAAtB;AACA;;;;AAIA,OAAKG,eAAL,GAAuB,iCAAmBL,UAAnB,EAA+B,iBAA/B,EAAkDD,cAAcG,aAAd,CAA4B,iBAA5B,CAAlD,CAAvB;AACA;;;;AAIA,OAAKI,MAAL,GAAc,iCAAmBN,UAAnB,EAA+B,QAA/B,EAAyCD,cAAcG,aAAd,CAA4B,QAA5B,CAAzC,CAAd;AACA;;;;AAIA,OAAKK,MAAL,GAAc,iCAAmBP,UAAnB,EAA+B,QAA/B,EAAyCD,cAAcG,aAAd,CAA4B,QAA5B,CAAzC,CAAd;AACA;;;;AAIA,OAAKM,SAAL,GAAiB,iCAAmBR,UAAnB,EAA+B,WAA/B,EAA4CD,cAAcG,aAAd,CAA4B,WAA5B,CAA5C,CAAjB;AACA;;;;AAIA,OAAKO,SAAL,GAAiB,iCAAmBT,UAAnB,EAA+B,WAA/B,EAA4CD,cAAcG,aAAd,CAA4B,WAA5B,CAA5C,CAAjB;AACA;;;;AAIA,OAAKQ,WAAL,GAAmB,iCAAmBV,UAAnB,EAA+B,aAA/B,EAA8CD,cAAcG,aAAd,CAA4B,aAA5B,CAA9C,CAAnB;;AAEA,MAAG,qBAAqBF,UAAxB;AACC;;;;AAIA,QAAKW,eAAL,GAAuB,iCAAmBX,UAAnB,EAA+B,iBAA/B,EAAkDD,cAAcG,aAAd,CAA4B,iBAA5B,CAAlD,CAAvB;AACD;;AAEA;AACA,MAAG,YAAYF,UAAf,EACC,KAAKY,UAAL,CAAgBZ,WAAWa,MAA3B;AACD;AACA;AACA,MAAG,UAAUb,UAAb,EACC,KAAKc,QAAL,CAAcd,WAAWe,IAAzB;AACD;AACA;AACD;AACA;;;;;;;;;AAgGA;AACA;;;;6BAIWF,M,EACX;AACC;AACA,OAAMG,OAAOlB,OAAOmB,aAAP,CAAqBJ,MAArB,EACZA,MADY,EAEZd,cAAcc,MAAd,CAAqB;AACpBK,WAAO;AACNjB,cAAS,SADH;AAENE,cAAS,SAFH;AAGNC,qBAAgB,gBAHV;AAINC,sBAAiB,iBAJX;AAKNC,aAAQ,QALF;AAMNC,aAAQ,QANF;AAONC,gBAAW,WAPL;AAQNC,gBAAW,WARL;AASNC,kBAAa,aATP;AAUNS,qBAAgB;AACfD,aAAO;AACNE,kBAAW;AADL;AADQ;AAVV;AADa,IAArB,CAFY,CAAb;;AAsBA,OAAGJ,KAAKK,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIC,KAAJ,CAAU,uEAAV,CAAN;AACD;;AAEA;AACA,QAAKrB,OAAL,GAAee,KAAKO,MAAL,CAAYtB,OAAZ,CAAoBuB,UAApB,CAA+BC,QAA9C;AACA,QAAKtB,OAAL,GAAea,KAAKO,MAAL,CAAYpB,OAAZ,CAAoBuB,cAApB,CAAmC,GAAnC,CAAf;AACA,QAAKtB,cAAL,GAAsBY,KAAKO,MAAL,CAAYnB,cAAlC;AACA,QAAKC,eAAL,GAAuBW,KAAKO,MAAL,CAAYlB,eAAZ,CAA4BqB,cAA5B,CAA2C,GAA3C,CAAvB;AACA,QAAKpB,MAAL,GAAcU,KAAKO,MAAL,CAAYjB,MAAZ,CAAmBoB,cAAnB,CAAkC,GAAlC,CAAd;AACA,QAAKnB,MAAL,GAAcS,KAAKO,MAAL,CAAYhB,MAAZ,CAAmBmB,cAAnB,CAAkC,GAAlC,CAAd;AACA,QAAKlB,SAAL,GAAiBQ,KAAKO,MAAL,CAAYf,SAAZ,CAAsBkB,cAAtB,CAAqC,GAArC,CAAjB;AACA,QAAKjB,SAAL,GAAiBO,KAAKO,MAAL,CAAYd,SAAZ,CAAsBiB,cAAtB,CAAqC,GAArC,CAAjB;AACA,QAAKhB,WAAL,GAAmBM,KAAKO,MAAL,CAAYb,WAAZ,CAAwBgB,cAAxB,CAAuC,GAAvC,CAAnB;;AAEA,OAAG,qBAAqBV,KAAKO,MAA7B,EACC,KAAKZ,eAAL,GAAuBgB,MAAMC,IAAN,CAAWZ,KAAKO,MAAL,CAAYZ,eAAvB,EAAwC;AAAA,WAAW,6BAAmB,EAAEE,QAAQgB,OAAV,EAAnB,CAAX;AAAA,IAAxC,CAAvB;AACD;AACA;AACD;AACA;;;;;;;6BAKA;AACC;AACA,OAAMC,cAAc,EAApB;;AAEAA,eAAYC,IAAZ,CAAiB,IAAIjC,OAAOkC,OAAX,CAAmB,EAAEC,OAAO,KAAKhC,OAAd,EAAnB,CAAjB;AACA6B,eAAYC,IAAZ,CAAiB,KAAK5B,OAAL,CAAa+B,YAAb,EAAjB;AACAJ,eAAYC,IAAZ,CAAiB,KAAK3B,cAAtB;AACA0B,eAAYC,IAAZ,CAAiB,KAAK1B,eAAL,CAAqB6B,YAArB,EAAjB;AACAJ,eAAYC,IAAZ,CAAiB,KAAKzB,MAAL,CAAY4B,YAAZ,EAAjB;AACAJ,eAAYC,IAAZ,CAAiB,KAAKxB,MAAL,CAAY2B,YAAZ,EAAjB;AACAJ,eAAYC,IAAZ,CAAiB,KAAKvB,SAAL,CAAe0B,YAAf,EAAjB;AACAJ,eAAYC,IAAZ,CAAiB,KAAKtB,SAAL,CAAeyB,YAAf,EAAjB;AACAJ,eAAYC,IAAZ,CAAiB,KAAKrB,WAAL,CAAiBwB,YAAjB,EAAjB;;AAEA,OAAG,qBAAqB,IAAxB,EACA;AACCJ,gBAAYC,IAAZ,CAAiB,IAAIjC,OAAOqC,QAAX,CAAoB;AACpCF,YAAON,MAAMC,IAAN,CAAW,KAAKjB,eAAhB,EAAiC;AAAA,aAAWkB,QAAQO,QAAR,EAAX;AAAA,MAAjC;AAD6B,KAApB,CAAjB;AAGA;AACD;;AAEA;AACA,UAAQ,IAAItC,OAAOqC,QAAX,CAAoB;AAC3BF,WAAOH;AADoB,IAApB,CAAR;AAGA;AACA;AACD;AACA;;;;;;;2BAKA;AACC,OAAMO,MAAM;AACXC,OAAG,uBAAS,kCAAoB,KAAKnC,OAAL,CAAaqB,UAAb,CAAwBe,QAA5C,CAAT,EAAgE,IAAhE,EAAsE,IAAtE,EAA4E,IAA5E,CADQ;AAEXC,OAAG,uBAAS,kCAAoB,KAAKpC,cAAL,CAAoBoB,UAApB,CAA+Be,QAAnD,CAAT,EAAuE,IAAvE,EAA6E,IAA7E,EAAmF,IAAnF,CAFQ;AAGXE,OAAG,uBAAS,kCAAoB,KAAKpC,eAAL,CAAqBmB,UAArB,CAAgCe,QAApD,CAAT,EAAwE,IAAxE,EAA8E,IAA9E,EAAoF,IAApF,CAHQ;AAIXG,OAAG,uBAAS,kCAAoB,KAAKpC,MAAL,CAAYkB,UAAZ,CAAuBe,QAA3C,CAAT,EAA+D,IAA/D,EAAqE,IAArE,EAA2E,IAA3E,CAJQ;AAKXI,OAAG,uBAAS,kCAAoB,KAAKpC,MAAL,CAAYiB,UAAZ,CAAuBe,QAA3C,CAAT,EAA+D,IAA/D,EAAqE,IAArE,EAA2E,IAA3E,CALQ;AAMXK,QAAI,uBAAS,kCAAoB,KAAKpC,SAAL,CAAegB,UAAf,CAA0Be,QAA9C,CAAT,EAAkE,IAAlE,EAAwE,IAAxE,EAA8E,IAA9E,CANO;AAOXM,QAAI,uBAAS,kCAAoB,KAAKpC,SAAL,CAAee,UAAf,CAA0Be,QAA9C,CAAT,EAAkE,IAAlE,EAAwE,IAAxE,EAA8E,IAA9E,CAPO;AAQXO,QAAI,uBAAS,kCAAoB,KAAKpC,WAAL,CAAiBc,UAAjB,CAA4Be,QAAhD,CAAT,EAAoE,IAApE,EAA0E,IAA1E,EAAgF,IAAhF;AARO,IAAZ;;AAWA,OAAG,qBAAqB,IAAxB,EACCF,IAAIU,GAAJ,GAAUpB,MAAMC,IAAN,CAAW,KAAKjB,eAAhB,EAAiC;AAAA,WAAWkB,QAAQmB,MAAR,EAAX;AAAA,IAAjC,CAAV;;AAED,UAAOX,GAAP;AACA;AACD;AACA;;;;;;;2BAIStB,I,EACT;AACC,OAAG,OAAOA,IAAV,EACC,KAAKZ,OAAL,GAAe,IAAIL,OAAOkC,OAAX,CAAmB,EAAEO,UAAU,kCAAoB,yBAAWxB,KAAKuB,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAf,CADD,KAGC,MAAM,IAAIhB,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,OAAOP,IAAV,EACC,KAAKX,cAAL,GAAsB,IAAIN,OAAOkC,OAAX,CAAmB,EAAEO,UAAU,kCAAoB,yBAAWxB,KAAKyB,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAtB,CADD,KAGC,MAAM,IAAIlB,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,OAAOP,IAAV,EACC,KAAKV,eAAL,GAAuB,IAAIP,OAAOkC,OAAX,CAAmB,EAAEO,UAAU,kCAAoB,yBAAWxB,KAAK0B,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAvB,CADD,KAGC,MAAM,IAAInB,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,OAAOP,IAAV,EACC,KAAKT,MAAL,GAAc,IAAIR,OAAOkC,OAAX,CAAmB,EAAEO,UAAU,kCAAoB,yBAAWxB,KAAK2B,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAd,CADD,KAGC,MAAM,IAAIpB,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,OAAOP,IAAV,EACC,KAAKR,MAAL,GAAc,IAAIT,OAAOkC,OAAX,CAAmB,EAAEO,UAAU,kCAAoB,yBAAWxB,KAAK4B,CAAhB,EAAmB,IAAnB,EAAyB,IAAzB,CAApB,CAAZ,EAAnB,CAAd,CADD,KAGC,MAAM,IAAIrB,KAAJ,CAAU,kCAAV,CAAN;;AAED,OAAG,QAAQP,IAAX,EACC,KAAKP,SAAL,GAAiB,IAAIV,OAAOkC,OAAX,CAAmB,EAAEO,UAAU,kCAAoB,yBAAWxB,KAAK6B,EAAhB,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAAZ,EAAnB,CAAjB,CADD,KAGC,MAAM,IAAItB,KAAJ,CAAU,mCAAV,CAAN;;AAED,OAAG,QAAQP,IAAX,EACC,KAAKN,SAAL,GAAiB,IAAIX,OAAOkC,OAAX,CAAmB,EAAEO,UAAU,kCAAoB,yBAAWxB,KAAK8B,EAAhB,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAAZ,EAAnB,CAAjB,CADD,KAGC,MAAM,IAAIvB,KAAJ,CAAU,mCAAV,CAAN;;AAED,OAAG,QAAQP,IAAX,EACC,KAAKL,WAAL,GAAmB,IAAIZ,OAAOkC,OAAX,CAAmB,EAAEO,UAAU,kCAAoB,yBAAWxB,KAAK+B,EAAhB,EAAoB,IAApB,EAA0B,IAA1B,CAApB,CAAZ,EAAnB,CAAnB,CADD,KAGC,MAAM,IAAIxB,KAAJ,CAAU,mCAAV,CAAN;;AAED,OAAG,SAASP,IAAZ,EACC,KAAKJ,eAAL,GAAuBgB,MAAMC,IAAN,CAAWb,KAAKgC,GAAhB,EAAqB;AAAA,WAAW,6BAAmB,EAAEhC,MAAMc,OAAR,EAAnB,CAAX;AAAA,IAArB,CAAvB;AACD;AACD;;;;gCAxPqBoB,U,EACrB;AACC,WAAOA,UAAP;AAEC,SAAK,SAAL;AACC,YAAO,CAAP;AACD,SAAK,SAAL;AACC,YAAO,IAAInD,OAAOkC,OAAX,EAAP;AACD,SAAK,gBAAL;AACC,YAAO,IAAIlC,OAAOkC,OAAX,EAAP;AACD,SAAK,iBAAL;AACC,YAAO,IAAIlC,OAAOkC,OAAX,EAAP;AACD,SAAK,QAAL;AACC,YAAO,IAAIlC,OAAOkC,OAAX,EAAP;AACD,SAAK,QAAL;AACC,YAAO,IAAIlC,OAAOkC,OAAX,EAAP;AACD,SAAK,WAAL;AACC,YAAO,IAAIlC,OAAOkC,OAAX,EAAP;AACD,SAAK,WAAL;AACC,YAAO,IAAIlC,OAAOkC,OAAX,EAAP;AACD,SAAK,aAAL;AACC,YAAO,IAAIlC,OAAOkC,OAAX,EAAP;AACD,SAAK,iBAAL;AACC,YAAO,EAAP;AACD;AACC,WAAM,IAAIV,KAAJ,mDAA0D2B,UAA1D,CAAN;AAvBF;AAyBA;AACD;AACA;;;;;;;;2BAMA;AAAA,OADcjD,UACd,uEAD2B,EAC3B;;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;AAeA,OAAMkB,QAAQ,iCAAmBlB,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;;AAEA,UAAQ,IAAIF,OAAOqC,QAAX,CAAoB;AAC3Be,UAAOhC,MAAME,SAAN,IAAmB,EADC;AAE3Ba,WAAO,CACN,IAAInC,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMjB,OAAN,IAAiB,EAA1B,EAAnB,CADM,EAEN,IAAIH,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMf,OAAN,IAAiB,EAA1B,EAAnB,CAFM,EAGN,IAAIL,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMd,cAAN,IAAwB,EAAjC,EAAnB,CAHM,EAIN,IAAIN,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMb,eAAN,IAAyB,EAAlC,EAAnB,CAJM,EAKN,IAAIP,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMZ,MAAN,IAAgB,EAAzB,EAAnB,CALM,EAMN,IAAIR,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMX,MAAN,IAAgB,EAAzB,EAAnB,CANM,EAON,IAAIT,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMV,SAAN,IAAmB,EAA5B,EAAnB,CAPM,EAQN,IAAIV,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMT,SAAN,IAAmB,EAA5B,EAAnB,CARM,EASN,IAAIX,OAAOkC,OAAX,CAAmB,EAAEkB,MAAOhC,MAAMR,WAAN,IAAqB,EAA9B,EAAnB,CATM,EAUN,IAAIZ,OAAOqC,QAAX,CAAoB;AACnBgB,eAAU,IADS;AAEnBlB,YAAO,CACN,IAAInC,OAAOsD,QAAX,CAAoB;AACnBF,YAAOhC,MAAMmC,mBAAN,IAA6B,EADjB;AAEnBpB,aAAO,yBAAepB,MAAf,CAAsBK,MAAMC,cAAN,IAAwB,EAA9C;AAFY,MAApB,CADM;AAFY,KAApB,CAVM;AAFoB,IAApB,CAAR;AAuBA;;;;;AA+JF;;;kBAzUqBpB,a","file":"RSAPrivateKey.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue, toBase64, arrayBufferToString, stringToArrayBuffer, fromBase64 } from \"pvutils\";\r\nimport OtherPrimeInfo from \"./OtherPrimeInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAPrivateKey\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAPrivateKey class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description version\r\n\t\t */\r\n\t\tthis.version = getParametersValue(parameters, \"version\", RSAPrivateKey.defaultValues(\"version\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description modulus\r\n\t\t */\r\n\t\tthis.modulus = getParametersValue(parameters, \"modulus\", RSAPrivateKey.defaultValues(\"modulus\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description publicExponent\r\n\t\t */\r\n\t\tthis.publicExponent = getParametersValue(parameters, \"publicExponent\", RSAPrivateKey.defaultValues(\"publicExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description privateExponent\r\n\t\t */\r\n\t\tthis.privateExponent = getParametersValue(parameters, \"privateExponent\", RSAPrivateKey.defaultValues(\"privateExponent\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description prime1\r\n\t\t */\r\n\t\tthis.prime1 = getParametersValue(parameters, \"prime1\", RSAPrivateKey.defaultValues(\"prime1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description prime2\r\n\t\t */\r\n\t\tthis.prime2 = getParametersValue(parameters, \"prime2\", RSAPrivateKey.defaultValues(\"prime2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description exponent1\r\n\t\t */\r\n\t\tthis.exponent1 = getParametersValue(parameters, \"exponent1\", RSAPrivateKey.defaultValues(\"exponent1\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description exponent2\r\n\t\t */\r\n\t\tthis.exponent2 = getParametersValue(parameters, \"exponent2\", RSAPrivateKey.defaultValues(\"exponent2\"));\r\n\t\t/**\r\n\t\t * @type {Integer}\r\n\t\t * @description coefficient\r\n\t\t */\r\n\t\tthis.coefficient = getParametersValue(parameters, \"coefficient\", RSAPrivateKey.defaultValues(\"coefficient\"));\r\n\r\n\t\tif(\"otherPrimeInfos\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<OtherPrimeInfo>}\r\n\t\t\t * @description otherPrimeInfos\r\n\t\t\t */\r\n\t\t\tthis.otherPrimeInfos = getParametersValue(parameters, \"otherPrimeInfos\", RSAPrivateKey.defaultValues(\"otherPrimeInfos\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t\t//region If input argument array contains \"json\" for this object\r\n\t\tif(\"json\" in parameters)\r\n\t\t\tthis.fromJSON(parameters.json);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"version\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"modulus\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"publicExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"privateExponent\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"prime2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent1\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"exponent2\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"coefficient\":\r\n\t\t\t\treturn new asn1js.Integer();\r\n\t\t\tcase \"otherPrimeInfos\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAPrivateKey class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RSAPrivateKey ::= Sequence {\r\n\t\t//    version           Version,\r\n\t\t//    modulus           Integer,  -- n\r\n\t\t//    publicExponent    Integer,  -- e\r\n\t\t//    privateExponent   Integer,  -- d\r\n\t\t//    prime1            Integer,  -- p\r\n\t\t//    prime2            Integer,  -- q\r\n\t\t//    exponent1         Integer,  -- d mod (p-1)\r\n\t\t//    exponent2         Integer,  -- d mod (q-1)\r\n\t\t//    coefficient       Integer,  -- (inverse of q) mod p\r\n\t\t//    otherPrimeInfos   OtherPrimeInfos OPTIONAL\r\n\t\t//}\r\n\t\t//\r\n\t\t//OtherPrimeInfos ::= Sequence SIZE(1..MAX) OF OtherPrimeInfo\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [modulus]\r\n\t\t * @property {string} [publicExponent]\r\n\t\t * @property {string} [privateExponent]\r\n\t\t * @property {string} [prime1]\r\n\t\t * @property {string} [prime2]\r\n\t\t * @property {string} [exponent1]\r\n\t\t * @property {string} [exponent2]\r\n\t\t * @property {string} [coefficient]\r\n\t\t * @property {string} [otherPrimeInfosName]\r\n\t\t * @property {Object} [otherPrimeInfo]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Integer({ name: (names.version || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.modulus || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.publicExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.privateExponent || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.prime2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent1 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.exponent2 || \"\") }),\r\n\t\t\t\tnew asn1js.Integer({ name: (names.coefficient || \"\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.otherPrimeInfosName || \"\"),\r\n\t\t\t\t\t\t\tvalue: OtherPrimeInfo.schema(names.otherPrimeInfo || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAPrivateKey.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tversion: \"version\",\r\n\t\t\t\t\tmodulus: \"modulus\",\r\n\t\t\t\t\tpublicExponent: \"publicExponent\",\r\n\t\t\t\t\tprivateExponent: \"privateExponent\",\r\n\t\t\t\t\tprime1: \"prime1\",\r\n\t\t\t\t\tprime2: \"prime2\",\r\n\t\t\t\t\texponent1: \"exponent1\",\r\n\t\t\t\t\texponent2: \"exponent2\",\r\n\t\t\t\t\tcoefficient: \"coefficient\",\r\n\t\t\t\t\totherPrimeInfo: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"otherPrimeInfos\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAPrivateKey\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.version = asn1.result.version.valueBlock.valueDec;\r\n\t\tthis.modulus = asn1.result.modulus.convertFromDER(256);\r\n\t\tthis.publicExponent = asn1.result.publicExponent;\r\n\t\tthis.privateExponent = asn1.result.privateExponent.convertFromDER(256);\r\n\t\tthis.prime1 = asn1.result.prime1.convertFromDER(128);\r\n\t\tthis.prime2 = asn1.result.prime2.convertFromDER(128);\r\n\t\tthis.exponent1 = asn1.result.exponent1.convertFromDER(128);\r\n\t\tthis.exponent2 = asn1.result.exponent2.convertFromDER(128);\r\n\t\tthis.coefficient = asn1.result.coefficient.convertFromDER(128);\r\n\r\n\t\tif(\"otherPrimeInfos\" in asn1.result)\r\n\t\t\tthis.otherPrimeInfos = Array.from(asn1.result.otherPrimeInfos, element => new OtherPrimeInfo({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\toutputArray.push(new asn1js.Integer({ value: this.version }));\r\n\t\toutputArray.push(this.modulus.convertToDER());\r\n\t\toutputArray.push(this.publicExponent);\r\n\t\toutputArray.push(this.privateExponent.convertToDER());\r\n\t\toutputArray.push(this.prime1.convertToDER());\r\n\t\toutputArray.push(this.prime2.convertToDER());\r\n\t\toutputArray.push(this.exponent1.convertToDER());\r\n\t\toutputArray.push(this.exponent2.convertToDER());\r\n\t\toutputArray.push(this.coefficient.convertToDER());\r\n\t\t\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.otherPrimeInfos, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst jwk = {\r\n\t\t\tn: toBase64(arrayBufferToString(this.modulus.valueBlock.valueHex), true, true, true),\r\n\t\t\te: toBase64(arrayBufferToString(this.publicExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\td: toBase64(arrayBufferToString(this.privateExponent.valueBlock.valueHex), true, true, true),\r\n\t\t\tp: toBase64(arrayBufferToString(this.prime1.valueBlock.valueHex), true, true, true),\r\n\t\t\tq: toBase64(arrayBufferToString(this.prime2.valueBlock.valueHex), true, true, true),\r\n\t\t\tdp: toBase64(arrayBufferToString(this.exponent1.valueBlock.valueHex), true, true, true),\r\n\t\t\tdq: toBase64(arrayBufferToString(this.exponent2.valueBlock.valueHex), true, true, true),\r\n\t\t\tqi: toBase64(arrayBufferToString(this.coefficient.valueBlock.valueHex), true, true, true)\r\n\t\t};\r\n\r\n\t\tif(\"otherPrimeInfos\" in this)\r\n\t\t\tjwk.oth = Array.from(this.otherPrimeInfos, element => element.toJSON());\r\n\r\n\t\treturn jwk;\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert JSON value into current object\r\n\t * @param {Object} json\r\n\t */\r\n\tfromJSON(json)\r\n\t{\r\n\t\tif(\"n\" in json)\r\n\t\t\tthis.modulus = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.n, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"n\\\"\");\r\n\r\n\t\tif(\"e\" in json)\r\n\t\t\tthis.publicExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.e, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"e\\\"\");\r\n\r\n\t\tif(\"d\" in json)\r\n\t\t\tthis.privateExponent = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.d, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"d\\\"\");\r\n\r\n\t\tif(\"p\" in json)\r\n\t\t\tthis.prime1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.p, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"p\\\"\");\r\n\r\n\t\tif(\"q\" in json)\r\n\t\t\tthis.prime2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.q, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"q\\\"\");\r\n\r\n\t\tif(\"dp\" in json)\r\n\t\t\tthis.exponent1 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dp, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dp\\\"\");\r\n\r\n\t\tif(\"dq\" in json)\r\n\t\t\tthis.exponent2 = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.dq, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"dq\\\"\");\r\n\r\n\t\tif(\"qi\" in json)\r\n\t\t\tthis.coefficient = new asn1js.Integer({ valueHex: stringToArrayBuffer(fromBase64(json.qi, true, true)) });\r\n\t\telse\r\n\t\t\tthrow new Error(\"Absent mandatory parameter \\\"qi\\\"\");\r\n\r\n\t\tif(\"oth\" in json)\r\n\t\t\tthis.otherPrimeInfos = Array.from(json.oth, element => new OtherPrimeInfo({ json: element }));\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}