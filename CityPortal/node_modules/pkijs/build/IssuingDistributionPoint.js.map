{"version":3,"sources":["../src/IssuingDistributionPoint.js"],"names":["asn1js","IssuingDistributionPoint","parameters","distributionPoint","defaultValues","onlyContainsUserCerts","onlyContainsCACerts","onlySomeReasons","indirectCRL","onlyContainsAttributeCerts","fromSchema","schema","asn1","compareSchema","names","distributionPointNames","verified","Error","result","idBlock","tagNumber","Array","from","element","tagClass","view","Uint8Array","valueBlock","valueHex","outputArray","value","Constructed","toSchema","push","Primitive","buffer","ArrayBuffer","Sequence","object","toJSON","memberName","name","blockName","optional","Choice","Repeated"],"mappings":"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","file":"IssuingDistributionPoint.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class IssuingDistributionPoint\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for IssuingDistributionPoint class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"distributionPoint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>|RelativeDistinguishedNames}\r\n\t\t\t * @description distributionPoint\r\n\t\t\t */\r\n\t\t\tthis.distributionPoint = getParametersValue(parameters, \"distributionPoint\", IssuingDistributionPoint.defaultValues(\"distributionPoint\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description onlyContainsUserCerts\r\n\t\t */\r\n\t\tthis.onlyContainsUserCerts = getParametersValue(parameters, \"onlyContainsUserCerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description onlyContainsCACerts\r\n\t\t */\r\n\t\tthis.onlyContainsCACerts = getParametersValue(parameters, \"onlyContainsCACerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"));\r\n\r\n\t\tif(\"onlySomeReasons\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {number}\r\n\t\t\t * @description onlySomeReasons\r\n\t\t\t */\r\n\t\t\tthis.onlySomeReasons = getParametersValue(parameters, \"onlySomeReasons\", IssuingDistributionPoint.defaultValues(\"onlySomeReasons\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description indirectCRL\r\n\t\t */\r\n\t\tthis.indirectCRL = getParametersValue(parameters, \"indirectCRL\", IssuingDistributionPoint.defaultValues(\"indirectCRL\"));\r\n\r\n\t\t/**\r\n\t\t * @type {boolean}\r\n\t\t * @description onlyContainsAttributeCerts\r\n\t\t */\r\n\t\tthis.onlyContainsAttributeCerts = getParametersValue(parameters, \"onlyContainsAttributeCerts\", IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"distributionPoint\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"onlyContainsUserCerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlyContainsCACerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlySomeReasons\":\r\n\t\t\t\treturn 0;\r\n\t\t\tcase \"indirectCRL\":\r\n\t\t\t\treturn false;\r\n\t\t\tcase \"onlyContainsAttributeCerts\":\r\n\t\t\t\treturn false;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for IssuingDistributionPoint class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t// IssuingDistributionPoint OID ::= 2.5.29.28\r\n\t\t//\r\n\t\t//IssuingDistributionPoint ::= SEQUENCE {\r\n\t\t//    distributionPoint          [0] DistributionPointName OPTIONAL,\r\n\t\t//    onlyContainsUserCerts      [1] BOOLEAN DEFAULT FALSE,\r\n\t\t//    onlyContainsCACerts        [2] BOOLEAN DEFAULT FALSE,\r\n\t\t//    onlySomeReasons            [3] ReasonFlags OPTIONAL,\r\n\t\t//    indirectCRL                [4] BOOLEAN DEFAULT FALSE,\r\n\t\t//    onlyContainsAttributeCerts [5] BOOLEAN DEFAULT FALSE }\r\n\t\t//\r\n\t\t//ReasonFlags ::= BIT STRING {\r\n\t\t//    unused                  (0),\r\n\t\t//    keyCompromise           (1),\r\n\t\t//    cACompromise            (2),\r\n\t\t//    affiliationChanged      (3),\r\n\t\t//    superseded              (4),\r\n\t\t//    cessationOfOperation    (5),\r\n\t\t//    certificateHold         (6),\r\n\t\t//    privilegeWithdrawn      (7),\r\n\t\t//    aACompromise            (8) }\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [distributionPoint]\r\n\t\t * @property {string} [distributionPointNames]\r\n\t\t * @property {string} [onlyContainsUserCerts]\r\n\t\t * @property {string} [onlyContainsCACerts]\r\n\t\t * @property {string} [onlySomeReasons]\r\n\t\t * @property {string} [indirectCRL]\r\n\t\t * @property {string} [onlyContainsAttributeCerts]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\t\t\tname: (names.distributionPointNames || \"\"),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: RelativeDistinguishedNames.schema().valueBlock.value\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsUserCerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsCACerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlySomeReasons || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT bitstring value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.indirectCRL || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT boolean value\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.onlyContainsAttributeCerts || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 5 // [5]\r\n\t\t\t\t\t}\r\n\t\t\t\t}) // IMPLICIT boolean value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tIssuingDistributionPoint.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tdistributionPoint: \"distributionPoint\",\r\n\t\t\t\t\tdistributionPointNames: \"distributionPointNames\",\r\n\t\t\t\t\tonlyContainsUserCerts: \"onlyContainsUserCerts\",\r\n\t\t\t\t\tonlyContainsCACerts: \"onlyContainsCACerts\",\r\n\t\t\t\t\tonlySomeReasons: \"onlySomeReasons\",\r\n\t\t\t\t\tindirectCRL: \"indirectCRL\",\r\n\t\t\t\t\tonlyContainsAttributeCerts: \"onlyContainsAttributeCerts\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\t\t\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for IssuingDistributionPoint\");\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"distributionPoint\" in asn1.result)\r\n\t\t{\r\n\t\t\tswitch(true)\r\n\t\t\t{\r\n\t\t\t\tcase (asn1.result.distributionPoint.idBlock.tagNumber === 0): // GENERAL_NAMES variant\r\n\t\t\t\t\tthis.distributionPoint = Array.from(asn1.result.distributionPointNames, element => new GeneralName({ schema: element }));\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase (asn1.result.distributionPoint.idBlock.tagNumber === 1): // RDN variant\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tasn1.result.distributionPoint.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\t\t\t\tasn1.result.distributionPoint.idBlock.tagNumber = 16; // SEQUENCE\r\n\r\n\t\t\t\t\t\tthis.distributionPoint = new RelativeDistinguishedNames({ schema: asn1.result.distributionPoint });\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Unknown tagNumber for distributionPoint: {$asn1.result.distributionPoint.idBlock.tagNumber}\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsUserCerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsUserCerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsUserCerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsCACerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsCACerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsCACerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlySomeReasons.valueBlock.valueHex);\r\n\t\t\tthis.onlySomeReasons = view[0];\r\n\t\t}\r\n\t\t\r\n\t\tif(\"indirectCRL\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.indirectCRL.valueBlock.valueHex);\r\n\t\t\tthis.indirectCRL = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlyContainsAttributeCerts\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst view = new Uint8Array(asn1.result.onlyContainsAttributeCerts.valueBlock.valueHex);\r\n\t\t\tthis.onlyContainsAttributeCerts = (view[0] !== 0x00);\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tlet value;\r\n\t\t\t\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t{\r\n\t\t\t\tvalue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: Array.from(this.distributionPoint, element => element.toSchema())\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tvalue = this.distributionPoint.toSchema();\r\n\t\t\t\t\r\n\t\t\t\tvalue.idBlock.tagClass = 3; // CONTEXT - SPECIFIC\r\n\t\t\t\tvalue.idBlock.tagNumber = 1; // [1]\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(value);\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsUserCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsCACerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in this)\r\n\t\t{\r\n\t\t\tconst buffer = new ArrayBuffer(1);\r\n\t\t\tconst view = new Uint8Array(buffer);\r\n\t\t\t\r\n\t\t\tview[0] = this.onlySomeReasons;\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.indirectCRL !== IssuingDistributionPoint.defaultValues(\"indirectCRL\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsAttributeCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 5 // [5]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new Uint8Array([0xFF])).buffer\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t\tobject.distributionPoint = Array.from(this.distributionPoint, element => element.toJSON());\r\n\t\t\telse\r\n\t\t\t\tobject.distributionPoint = this.distributionPoint.toJSON();\r\n\t\t}\r\n\t\t\r\n\t\tif(this.onlyContainsUserCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsUserCerts\"))\r\n\t\t\tobject.onlyContainsUserCerts = this.onlyContainsUserCerts;\r\n\t\t\r\n\t\tif(this.onlyContainsCACerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsCACerts\"))\r\n\t\t\tobject.onlyContainsCACerts = this.onlyContainsCACerts;\r\n\t\t\r\n\t\tif(\"onlySomeReasons\" in this)\r\n\t\t\tobject.onlySomeReasons = this.onlySomeReasons;\r\n\t\t\r\n\t\tif(this.indirectCRL !== IssuingDistributionPoint.defaultValues(\"indirectCRL\"))\r\n\t\t\tobject.indirectCRL = this.indirectCRL;\r\n\t\t\r\n\t\tif(this.onlyContainsAttributeCerts !== IssuingDistributionPoint.defaultValues(\"onlyContainsAttributeCerts\"))\r\n\t\t\tobject.onlyContainsAttributeCerts = this.onlyContainsAttributeCerts;\r\n\t\t\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}