{"version":3,"sources":["../src/PrivateKeyUsagePeriod.js"],"names":["asn1js","PrivateKeyUsagePeriod","parameters","notBefore","defaultValues","notAfter","fromSchema","schema","asn1","compareSchema","names","verified","Error","result","localNotBefore","GeneralizedTime","fromBuffer","valueBlock","valueHex","toDate","localNotAfter","outputArray","push","Primitive","idBlock","tagClass","tagNumber","valueDate","Sequence","value","object","memberName","Date","name","blockName","optional"],"mappings":"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","file":"PrivateKeyUsagePeriod.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PrivateKeyUsagePeriod\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PrivateKeyUsagePeriod class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"notBefore\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Date}\r\n\t\t\t * @description notBefore\r\n\t\t\t */\r\n\t\t\tthis.notBefore = getParametersValue(parameters, \"notBefore\", PrivateKeyUsagePeriod.defaultValues(\"notBefore\"));\r\n\r\n\t\tif(\"notAfter\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Date}\r\n\t\t\t * @description notAfter\r\n\t\t\t */\r\n\t\t\tthis.notAfter = getParametersValue(parameters, \"notAfter\", PrivateKeyUsagePeriod.defaultValues(\"notAfter\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"notBefore\":\r\n\t\t\t\treturn new Date();\r\n\t\t\tcase \"notAfter\":\r\n\t\t\t\treturn new Date();\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PrivateKeyUsagePeriod class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t// PrivateKeyUsagePeriod OID ::= 2.5.29.16\r\n\t\t//\r\n\t\t//PrivateKeyUsagePeriod ::= SEQUENCE {\r\n\t\t//    notBefore       [0]     GeneralizedTime OPTIONAL,\r\n\t\t//    notAfter        [1]     GeneralizedTime OPTIONAL }\r\n\t\t//-- either notBefore or notAfter MUST be present\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [notBefore]\r\n\t\t * @property {string} [notAfter]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.notBefore || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.notAfter || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPrivateKeyUsagePeriod.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tnotBefore: \"notBefore\",\r\n\t\t\t\t\tnotAfter: \"notAfter\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PrivateKeyUsagePeriod\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"notBefore\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst localNotBefore = new asn1js.GeneralizedTime();\r\n\t\t\tlocalNotBefore.fromBuffer(asn1.result.notBefore.valueBlock.valueHex);\r\n\t\t\tthis.notBefore = localNotBefore.toDate();\r\n\t\t}\r\n\r\n\t\tif(\"notAfter\" in asn1.result)\r\n\t\t{\r\n\t\t\tconst localNotAfter = new asn1js.GeneralizedTime({ valueHex: asn1.result.notAfter.valueBlock.valueHex });\r\n\t\t\tlocalNotAfter.fromBuffer(asn1.result.notAfter.valueBlock.valueHex);\r\n\t\t\tthis.notAfter = localNotAfter.toDate();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"notBefore\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new asn1js.GeneralizedTime({ valueDate: this.notBefore })).valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"notAfter\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: (new asn1js.GeneralizedTime({ valueDate: this.notAfter })).valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"notBefore\" in this)\r\n\t\t\tobject.notBefore = this.notBefore;\r\n\r\n\t\tif(\"notAfter\" in this)\r\n\t\t\tobject.notAfter = this.notAfter;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}