{"version":3,"sources":["../src/RSAESOAEPParams.js"],"names":["asn1js","RSAESOAEPParams","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","pSourceAlgorithm","fromSchema","schema","asn1","compareSchema","names","blockName","verified","Error","result","outputArray","isEqual","push","Constructed","idBlock","tagClass","tagNumber","value","toSchema","Sequence","object","toJSON","memberName","algorithmId","algorithmParams","Null","OctetString","valueHex","Uint8Array","buffer","name","optional"],"mappings":"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","file":"RSAESOAEPParams.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC3447\r\n */\r\nexport default class RSAESOAEPParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSAESOAEPParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description hashAlgorithm\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSAESOAEPParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description maskGenAlgorithm\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description pSourceAlgorithm\r\n\t\t */\r\n\t\tthis.pSourceAlgorithm = getParametersValue(parameters, \"pSourceAlgorithm\", RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"pSourceAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.9\", // id-pSpecified\r\n\t\t\t\t\talgorithmParams: new asn1js.OctetString({ valueHex: (new Uint8Array([0xda, 0x39, 0xa3, 0xee, 0x5e, 0x6b, 0x4b, 0x0d, 0x32, 0x55, 0xbf, 0xef, 0x95, 0x60, 0x18, 0x90, 0xaf, 0xd8, 0x07, 0x09])).buffer }) // SHA-1 hash of empty string\r\n\t\t\t\t});\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSAESOAEPParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RSAES-OAEP-params ::= SEQUENCE {\r\n\t\t//    hashAlgorithm     [0] HashAlgorithm    DEFAULT sha1,\r\n\t\t//    maskGenAlgorithm  [1] MaskGenAlgorithm DEFAULT mgf1SHA1,\r\n\t\t//    pSourceAlgorithm  [2] PSourceAlgorithm DEFAULT pSpecifiedEmpty\r\n\t\t//}\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [pSourceAlgorithm]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.pSourceAlgorithm || {})]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSAESOAEPParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tpSourceAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"pSourceAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSAESOAEPParams\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"pSourceAlgorithm\" in asn1.result)\r\n\t\t\tthis.pSourceAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.pSourceAlgorithm });\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\r\n\t\tif(!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.pSourceAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(!this.pSourceAlgorithm.isEqual(RSAESOAEPParams.defaultValues(\"pSourceAlgorithm\")))\r\n\t\t\tobject.pSourceAlgorithm = this.pSourceAlgorithm.toJSON();\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}