{"version":3,"sources":["../src/DistributionPoint.js"],"names":["asn1js","DistributionPoint","parameters","distributionPoint","defaultValues","reasons","cRLIssuer","fromSchema","schema","asn1","compareSchema","names","distributionPointNames","cRLIssuerNames","verified","Error","result","idBlock","tagNumber","Array","from","element","tagClass","BitString","valueHex","valueBlock","outputArray","internalValue","Constructed","value","toSchema","push","Primitive","Sequence","object","toJSON","memberName","name","blockName","optional","Choice","Repeated"],"mappings":"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","file":"DistributionPoint.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport GeneralName from \"./GeneralName.js\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class DistributionPoint\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for DistributionPoint class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t * @property {Object} [distributionPoint]\r\n\t * @property {Object} [reasons]\r\n\t * @property {Object} [cRLIssuer]\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\tif(\"distributionPoint\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @description distributionPoint\r\n\t\t\t */\r\n\t\t\tthis.distributionPoint = getParametersValue(parameters, \"distributionPoint\", DistributionPoint.defaultValues(\"distributionPoint\"));\r\n\r\n\t\tif(\"reasons\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {BitString}\r\n\t\t\t * @description values\r\n\t\t\t */\r\n\t\t\tthis.reasons = getParametersValue(parameters, \"reasons\", DistributionPoint.defaultValues(\"reasons\"));\r\n\r\n\t\tif(\"cRLIssuer\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<GeneralName>}\r\n\t\t\t * @description cRLIssuer\r\n\t\t\t */\r\n\t\t\tthis.cRLIssuer = getParametersValue(parameters, \"cRLIssuer\", DistributionPoint.defaultValues(\"cRLIssuer\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"distributionPoint\":\r\n\t\t\t\treturn [];\r\n\t\t\tcase \"reasons\":\r\n\t\t\t\treturn new asn1js.BitString();\r\n\t\t\tcase \"cRLIssuer\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for DistributionPoint class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//DistributionPoint ::= SEQUENCE {\r\n\t\t//    distributionPoint       [0]     DistributionPointName OPTIONAL,\r\n\t\t//    reasons                 [1]     ReasonFlags OPTIONAL,\r\n\t\t//    cRLIssuer               [2]     GeneralNames OPTIONAL }\r\n\t\t//\r\n\t\t//DistributionPointName ::= CHOICE {\r\n\t\t//    fullName                [0]     GeneralNames,\r\n\t\t//    nameRelativeToCRLIssuer [1]     RelativeDistinguishedName }\r\n\t\t//\r\n\t\t//ReasonFlags ::= BIT STRING {\r\n\t\t//    unused                  (0),\r\n\t\t//    keyCompromise           (1),\r\n\t\t//    cACompromise            (2),\r\n\t\t//    affiliationChanged      (3),\r\n\t\t//    superseded              (4),\r\n\t\t//    cessationOfOperation    (5),\r\n\t\t//    certificateHold         (6),\r\n\t\t//    privilegeWithdrawn      (7),\r\n\t\t//    aACompromise            (8) }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [distributionPoint]\r\n\t\t * @property {string} [distributionPointNames]\r\n\t\t * @property {string} [reasons]\r\n\t\t * @property {string} [cRLIssuer]\r\n\t\t * @property {string} [cRLIssuerNames]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\t\t\t\t\tname: (names.distributionPointNames || \"\"),\r\n\t\t\t\t\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t\t\t}),\r\n\t\t\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\t\t\tname: (names.distributionPoint || \"\"),\r\n\t\t\t\t\t\t\t\t\toptional: true,\r\n\t\t\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\tvalue: RelativeDistinguishedNames.schema().valueBlock.value\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Primitive({\r\n\t\t\t\t\tname: (names.reasons || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t}\r\n\t\t\t\t}), // IMPLICIT bitstring value\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.cRLIssuer || \"\"),\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: (names.cRLIssuerNames || \"\"),\r\n\t\t\t\t\t\t\tvalue: GeneralName.schema()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}) // IMPLICIT bitstring value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tDistributionPoint.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tdistributionPoint: \"distributionPoint\",\r\n\t\t\t\t\tdistributionPointNames: \"distributionPointNames\",\r\n\t\t\t\t\treasons: \"reasons\",\r\n\t\t\t\t\tcRLIssuer: \"cRLIssuer\",\r\n\t\t\t\t\tcRLIssuerNames: \"cRLIssuerNames\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for DistributionPoint\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"distributionPoint\" in asn1.result)\r\n\t\t{\r\n\t\t\tif(asn1.result.distributionPoint.idBlock.tagNumber === 0) // GENERAL_NAMES variant\r\n\t\t\t\tthis.distributionPoint = Array.from(asn1.result.distributionPointNames, element => new GeneralName({ schema: element }));\r\n\r\n\t\t\tif(asn1.result.distributionPoint.idBlock.tagNumber === 1) // RDN variant\r\n\t\t\t{\r\n\t\t\t\tasn1.result.distributionPoint.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\t\tasn1.result.distributionPoint.idBlock.tagNumber = 16; // SEQUENCE\r\n\r\n\t\t\t\tthis.distributionPoint = new RelativeDistinguishedNames({ schema: asn1.result.distributionPoint });\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(\"reasons\" in asn1.result)\r\n\t\t\tthis.reasons = new asn1js.BitString({ valueHex: asn1.result.reasons.valueBlock.valueHex });\r\n\r\n\t\tif(\"cRLIssuer\" in asn1.result)\r\n\t\t\tthis.cRLIssuer = Array.from(asn1.result.cRLIssuerNames, element => new GeneralName({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tlet internalValue;\r\n\t\t\t\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t{\r\n\t\t\t\tinternalValue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: Array.from(this.distributionPoint, element => element.toSchema())\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinternalValue = new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.distributionPoint.toSchema()]\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [internalValue]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"reasons\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Primitive({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalueHex: this.reasons.valueBlock.valueHex\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(\"cRLIssuer\" in this)\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: Array.from(this.cRLIssuer, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(\"distributionPoint\" in this)\r\n\t\t{\r\n\t\t\tif(this.distributionPoint instanceof Array)\r\n\t\t\t\tobject.distributionPoint = Array.from(this.distributionPoint, element => element.toJSON());\r\n\t\t\telse\r\n\t\t\t\tobject.distributionPoint = this.distributionPoint.toJSON();\r\n\t\t}\r\n\r\n\t\tif(\"reasons\" in this)\r\n\t\t\tobject.reasons = this.reasons.toJSON();\r\n\r\n\t\tif(\"cRLIssuer\" in this)\r\n\t\t\tobject.cRLIssuer = Array.from(this.cRLIssuer, element => element.toJSON());\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}