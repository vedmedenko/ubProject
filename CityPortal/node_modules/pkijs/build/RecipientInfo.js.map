{"version":3,"sources":["../src/RecipientInfo.js"],"names":["asn1js","RecipientInfo","parameters","variant","defaultValues","value","fromSchema","schema","asn1","compareSchema","names","blockName","verified","Error","result","idBlock","tagClass","tagNumber","_schema","toSchema","Any","_object","toJSON","memberName","memberValue","Object","keys","length","Choice","Constructed","name","valueBlock"],"mappings":"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","file":"RecipientInfo.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport KeyTransRecipientInfo from \"./KeyTransRecipientInfo.js\";\r\nimport KeyAgreeRecipientInfo from \"./KeyAgreeRecipientInfo.js\";\r\nimport KEKRecipientInfo from \"./KEKRecipientInfo.js\";\r\nimport PasswordRecipientinfo from \"./PasswordRecipientinfo.js\";\r\nimport OtherRecipientInfo from \"./OtherRecipientInfo.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5652\r\n */\r\nexport default class RecipientInfo\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RecipientInfo class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description variant\r\n\t\t */\r\n\t\tthis.variant = getParametersValue(parameters, \"variant\", RecipientInfo.defaultValues(\"variant\"));\r\n\r\n\t\tif(\"value\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {*}\r\n\t\t\t * @description value\r\n\t\t\t */\r\n\t\t\tthis.value = getParametersValue(parameters, \"value\", RecipientInfo.defaultValues(\"value\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (-1);\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn {};\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"variant\":\r\n\t\t\t\treturn (memberValue === RecipientInfo.defaultValues(memberName));\r\n\t\t\tcase \"value\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RecipientInfo class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RecipientInfo ::= CHOICE {\r\n\t\t//    ktri KeyTransRecipientInfo,\r\n\t\t//    kari [1] KeyAgreeRecipientInfo,\r\n\t\t//    kekri [2] KEKRecipientInfo,\r\n\t\t//    pwri [3] PasswordRecipientinfo,\r\n\t\t//    ori [4] OtherRecipientInfo }\r\n\t\t\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [type]\r\n\t\t * @property {string} [setName]\r\n\t\t * @property {string} [values]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\t\t\r\n\t\treturn (new asn1js.Choice({\r\n\t\t\tvalue: [\r\n\t\t\t\tKeyTransRecipientInfo.schema({\r\n\t\t\t\t\tnames: {\r\n\t\t\t\t\t\tblockName: (names.blockName || \"\")\r\n\t\t\t\t\t}\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KeyAgreeRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: KEKRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: PasswordRecipientinfo.schema().valueBlock.value\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tname: (names.blockName || \"\"),\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 4 // [4]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: OtherRecipientInfo.schema().valueBlock.value\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRecipientInfo.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tblockName: \"blockName\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for CMS_RECIPIENT_INFO\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(asn1.result.blockName.idBlock.tagClass === 1)\r\n\t\t{\r\n\t\t\tthis.variant = 1;\r\n\t\t\tthis.value = new KeyTransRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\t//region Create \"SEQUENCE\" from \"ASN1_CONSTRUCTED\"\r\n\t\t\tconst tagNumber = asn1.result.blockName.idBlock.tagNumber;\r\n\r\n\t\t\tasn1.result.blockName.idBlock.tagClass = 1; // UNIVERSAL\r\n\t\t\tasn1.result.blockName.idBlock.tagNumber = 16; // SEQUENCE\r\n\t\t\t//endregion\r\n\r\n\t\t\tswitch(tagNumber)\r\n\t\t\t{\r\n\t\t\t\tcase 1:\r\n\t\t\t\t\tthis.variant = 2;\r\n\t\t\t\t\tthis.value = new KeyAgreeRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 2:\r\n\t\t\t\t\tthis.variant = 3;\r\n\t\t\t\t\tthis.value = new KEKRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 3:\r\n\t\t\t\t\tthis.variant = 4;\r\n\t\t\t\t\tthis.value = new PasswordRecipientinfo({ schema: asn1.result.blockName });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 4:\r\n\t\t\t\t\tthis.variant = 5;\r\n\t\t\t\t\tthis.value = new OtherRecipientInfo({ schema: asn1.result.blockName });\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tthrow new Error(\"Incorrect structure of RecipientInfo block\");\r\n\t\t\t}\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\tconst _schema = this.value.toSchema();\r\n\r\n\t\tswitch(this.variant)\r\n\t\t{\r\n\t\t\tcase 1:\r\n\t\t\t\treturn _schema;\r\n\t\t\tcase 2:\r\n\t\t\tcase 3:\r\n\t\t\tcase 4:\r\n\t\t\t\t//region Create \"ASN1_CONSTRUCTED\" from \"SEQUENCE\"\r\n\t\t\t\t_schema.idBlock.tagClass = 3; // CONTEXT-SPECIFIC\r\n\t\t\t\t_schema.idBlock.tagNumber = (this.variant - 1);\r\n\t\t\t\t//endregion\r\n\r\n\t\t\t\treturn _schema;\r\n\t\t\tdefault:\r\n\t\t\t\treturn new asn1js.Any();\r\n\t\t}\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {\r\n\t\t\tvariant: this.variant\r\n\t\t};\r\n\r\n\t\tif((this.variant >= 1) && (this.variant <= 4))\r\n\t\t\t_object.value = this.value.toJSON();\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}