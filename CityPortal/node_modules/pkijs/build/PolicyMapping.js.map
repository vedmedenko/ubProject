{"version":3,"sources":["../src/PolicyMapping.js"],"names":["asn1js","PolicyMapping","parameters","issuerDomainPolicy","defaultValues","subjectDomainPolicy","fromSchema","schema","asn1","compareSchema","names","verified","Error","result","valueBlock","toString","Sequence","value","ObjectIdentifier","memberName","name","blockName"],"mappings":";;;;;;;;AAAA;;IAAYA,M;;AACZ;;;;;;AACA;AACA;;;IAGqBC,a;AAEpB;AACA;;;;;AAKA,0BACA;AAAA,MADYC,UACZ,uEADyB,EACzB;;AAAA;;AACC;AACA;;;;AAIA,OAAKC,kBAAL,GAA0B,iCAAmBD,UAAnB,EAA+B,oBAA/B,EAAqDD,cAAcG,aAAd,CAA4B,oBAA5B,CAArD,CAA1B;AACA;;;;AAIA,OAAKC,mBAAL,GAA2B,iCAAmBH,UAAnB,EAA+B,qBAA/B,EAAsDD,cAAcG,aAAd,CAA4B,qBAA5B,CAAtD,CAA3B;AACA;;AAEA;AACA,MAAG,YAAYF,UAAf,EACC,KAAKI,UAAL,CAAgBJ,WAAWK,MAA3B;AACD;AACA;AACD;AACA;;;;;;;;;AA4CA;AACA;;;;6BAIWA,M,EACX;AACC;AACA,OAAMC,OAAOR,OAAOS,aAAP,CAAqBF,MAArB,EACZA,MADY,EAEZN,cAAcM,MAAd,CAAqB;AACpBG,WAAO;AACNP,yBAAoB,oBADd;AAENE,0BAAqB;AAFf;AADa,IAArB,CAFY,CAAb;;AAUA,OAAGG,KAAKG,QAAL,KAAkB,KAArB,EACC,MAAM,IAAIC,KAAJ,CAAU,uEAAV,CAAN;AACD;;AAEA;AACA,QAAKT,kBAAL,GAA0BK,KAAKK,MAAL,CAAYV,kBAAZ,CAA+BW,UAA/B,CAA0CC,QAA1C,EAA1B;AACA,QAAKV,mBAAL,GAA2BG,KAAKK,MAAL,CAAYR,mBAAZ,CAAgCS,UAAhC,CAA2CC,QAA3C,EAA3B;AACA;AACA;AACD;AACA;;;;;;;6BAKA;AACC;AACA,UAAQ,IAAIf,OAAOgB,QAAX,CAAoB;AAC3BC,WAAO,CACN,IAAIjB,OAAOkB,gBAAX,CAA4B,EAAED,OAAO,KAAKd,kBAAd,EAA5B,CADM,EAEN,IAAIH,OAAOkB,gBAAX,CAA4B,EAAED,OAAO,KAAKZ,mBAAd,EAA5B,CAFM;AADoB,IAApB,CAAR;AAMA;AACA;AACD;AACA;;;;;;;2BAKA;AACC,UAAO;AACNF,wBAAoB,KAAKA,kBADnB;AAENE,yBAAqB,KAAKA;AAFpB,IAAP;AAIA;AACD;;;;gCA/FqBc,U,EACrB;AACC,WAAOA,UAAP;AAEC,SAAK,oBAAL;AACC,YAAO,EAAP;AACD,SAAK,qBAAL;AACC,YAAO,EAAP;AACD;AACC,WAAM,IAAIP,KAAJ,mDAA0DO,UAA1D,CAAN;AAPF;AASA;AACD;AACA;;;;;;;;2BAMA;AAAA,OADcjB,UACd,uEAD2B,EAC3B;;AACC;AACA;AACA;;AAEA;;;;;;AAMA,OAAMQ,QAAQ,iCAAmBR,UAAnB,EAA+B,OAA/B,EAAwC,EAAxC,CAAd;;AAEA,UAAQ,IAAIF,OAAOgB,QAAX,CAAoB;AAC3BI,UAAOV,MAAMW,SAAN,IAAmB,EADC;AAE3BJ,WAAO,CACN,IAAIjB,OAAOkB,gBAAX,CAA4B,EAAEE,MAAOV,MAAMP,kBAAN,IAA4B,EAArC,EAA5B,CADM,EAEN,IAAIH,OAAOkB,gBAAX,CAA4B,EAAEE,MAAOV,MAAML,mBAAN,IAA6B,EAAtC,EAA5B,CAFM;AAFoB,IAApB,CAAR;AAOA;;;;;AA0DF;;;kBAlIqBJ,a","file":"PolicyMapping.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC5280\r\n */\r\nexport default class PolicyMapping\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for PolicyMapping class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description issuerDomainPolicy\r\n\t\t */\r\n\t\tthis.issuerDomainPolicy = getParametersValue(parameters, \"issuerDomainPolicy\", PolicyMapping.defaultValues(\"issuerDomainPolicy\"));\r\n\t\t/**\r\n\t\t * @type {string}\r\n\t\t * @description subjectDomainPolicy\r\n\t\t */\r\n\t\tthis.subjectDomainPolicy = getParametersValue(parameters, \"subjectDomainPolicy\", PolicyMapping.defaultValues(\"subjectDomainPolicy\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"issuerDomainPolicy\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tcase \"subjectDomainPolicy\":\r\n\t\t\t\treturn \"\";\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for PolicyMapping class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//PolicyMapping ::= SEQUENCE {\r\n\t\t//    issuerDomainPolicy      CertPolicyId,\r\n\t\t//    subjectDomainPolicy     CertPolicyId }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [issuerDomainPolicy]\r\n\t\t * @property {string} [subjectDomainPolicy]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.issuerDomainPolicy || \"\") }),\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ name: (names.subjectDomainPolicy || \"\") })\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tPolicyMapping.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\tissuerDomainPolicy: \"issuerDomainPolicy\",\r\n\t\t\t\t\tsubjectDomainPolicy: \"subjectDomainPolicy\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for PolicyMapping\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.issuerDomainPolicy = asn1.result.issuerDomainPolicy.valueBlock.toString();\r\n\t\tthis.subjectDomainPolicy = asn1.result.subjectDomainPolicy.valueBlock.toString();\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.issuerDomainPolicy }),\r\n\t\t\t\tnew asn1js.ObjectIdentifier({ value: this.subjectDomainPolicy })\r\n\t\t\t]\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\treturn {\r\n\t\t\tissuerDomainPolicy: this.issuerDomainPolicy,\r\n\t\t\tsubjectDomainPolicy: this.subjectDomainPolicy\r\n\t\t};\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}