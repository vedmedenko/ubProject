{"version":3,"sources":["../src/ResponseData.js"],"names":["asn1js","ResponseData","parameters","tbs","defaultValues","responderID","producedAt","responses","responseExtensions","fromSchema","schema","asn1","compareSchema","verified","Error","result","valueBeforeDecode","version","valueBlock","valueDec","idBlock","tagNumber","value","toDate","Array","from","element","encodeFlag","tbsSchema","length","fromBER","outputArray","push","Constructed","tagClass","Integer","toSchema","GeneralizedTime","valueDate","Sequence","_object","toJSON","memberName","ArrayBuffer","Date","memberValue","byteLength","Object","keys","names","name","blockName","optional","Choice","ResponseDataByName","OctetString","ResponseDataByKey","Repeated","response","extensions"],"mappings":"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","file":"ResponseData.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport RelativeDistinguishedNames from \"./RelativeDistinguishedNames.js\";\r\nimport SingleResponse from \"./SingleResponse.js\";\r\nimport Extension from \"./Extension.js\";\r\nimport Extensions from \"./Extensions.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC6960\r\n */\r\nexport default class ResponseData\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for ResponseData class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {ArrayBuffer}\r\n\t\t * @description tbs\r\n\t\t */\r\n\t\tthis.tbs = getParametersValue(parameters, \"tbs\", ResponseData.defaultValues(\"tbs\"));\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @description responderID\r\n\t\t */\r\n\t\tthis.responderID = getParametersValue(parameters, \"responderID\", ResponseData.defaultValues(\"responderID\"));\r\n\t\t/**\r\n\t\t * @type {Date}\r\n\t\t * @description producedAt\r\n\t\t */\r\n\t\tthis.producedAt = getParametersValue(parameters, \"producedAt\", ResponseData.defaultValues(\"producedAt\"));\r\n\t\t/**\r\n\t\t * @type {Array.<SingleResponse>}\r\n\t\t * @description responses\r\n\t\t */\r\n\t\tthis.responses = getParametersValue(parameters, \"responses\", ResponseData.defaultValues(\"responses\"));\r\n\r\n\t\tif(\"responseExtensions\" in parameters)\r\n\t\t\t/**\r\n\t\t\t * @type {Array.<Extension>}\r\n\t\t\t * @description responseExtensions\r\n\t\t\t */\r\n\t\t\tthis.responseExtensions = getParametersValue(parameters, \"responseExtensions\", ResponseData.defaultValues(\"responseExtensions\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn new ArrayBuffer(0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn {};\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn new Date(0, 0, 0);\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn [];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Compare values with default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t * @param {*} memberValue Value to compare with default value\r\n\t */\r\n\tstatic compareWithDefault(memberName, memberValue)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"tbs\":\r\n\t\t\t\treturn (memberValue.byteLength === 0);\r\n\t\t\tcase \"responderID\":\r\n\t\t\t\treturn (Object.keys(memberValue).length === 0);\r\n\t\t\tcase \"producedAt\":\r\n\t\t\t\treturn (memberValue === ResponseData.defaultValues(memberName));\r\n\t\t\tcase \"responses\":\r\n\t\t\tcase \"responseExtensions\":\r\n\t\t\t\treturn (memberValue.length === 0);\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for ResponseData class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//ResponseData ::= SEQUENCE {\r\n\t\t//    version              [0] EXPLICIT Version DEFAULT v1,\r\n\t\t//    responderID              ResponderID,\r\n\t\t//    producedAt               GeneralizedTime,\r\n\t\t//    responses                SEQUENCE OF SingleResponse,\r\n\t\t//    responseExtensions   [1] EXPLICIT Extensions OPTIONAL }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [version]\r\n\t\t * @property {string} [ResponseDataByName]\r\n\t\t * @property {string} [ResponseDataByKey]\r\n\t\t * @property {string} [producedAt]\r\n\t\t * @property {string} [response]\r\n\t\t * @property {string} [extensions]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"ResponseData\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.version || \"ResponseData.version\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Choice({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [RelativeDistinguishedNames.schema(names.ResponseDataByName || {\r\n\t\t\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\t\t\tblockName: \"ResponseData.byName\"\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})]\r\n\t\t\t\t\t\t}),\r\n\t\t\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\t\t\tname: (names.responderID || \"ResponseData.responderID\"),\r\n\t\t\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tvalue: [new asn1js.OctetString({ name: (names.ResponseDataByKey || \"ResponseData.byKey\") })]\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.GeneralizedTime({ name: (names.producedAt || \"ResponseData.producedAt\") }),\r\n\t\t\t\tnew asn1js.Sequence({\r\n\t\t\t\t\tvalue: [\r\n\t\t\t\t\t\tnew asn1js.Repeated({\r\n\t\t\t\t\t\t\tname: \"ResponseData.responses\",\r\n\t\t\t\t\t\t\tvalue: SingleResponse.schema(names.response || {})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [Extensions.schema(names.extensions || {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"ResponseData.responseExtensions\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})]\r\n\t\t\t\t}) // EXPLICIT SEQUENCE value\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tResponseData.schema()\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for ocsp.ResponseData\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tthis.tbs = asn1.result.ResponseData.valueBeforeDecode;\r\n\r\n\t\tif(\"ResponseData.version\" in asn1.result)\r\n\t\t\tthis.version = asn1.result[\"ResponseData.version\"].valueBlock.valueDec;\r\n\r\n\t\tif(asn1.result[\"ResponseData.responderID\"].idBlock.tagNumber === 1)\r\n\t\t\tthis.responderID = new RelativeDistinguishedNames({ schema: asn1.result[\"ResponseData.responderID\"].valueBlock.value[0] });\r\n\t\telse\r\n\t\t\tthis.responderID = asn1.result[\"ResponseData.responderID\"].valueBlock.value[0]; // OCTETSTRING\r\n\r\n\t\tthis.producedAt = asn1.result[\"ResponseData.producedAt\"].toDate();\r\n\t\tthis.responses = Array.from(asn1.result[\"ResponseData.responses\"], element => new SingleResponse({ schema: element }));\r\n\r\n\t\tif(\"ResponseData.responseExtensions\" in asn1.result)\r\n\t\t\tthis.responseExtensions = Array.from(asn1.result[\"ResponseData.responseExtensions\"].valueBlock.value, element => new Extension({ schema: element }));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @param {boolean} encodeFlag If param equal to false then create TBS schema via decoding stored value. In othe case create TBS schema via assembling from TBS parts.\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema(encodeFlag = false)\r\n\t{\r\n\t\t//region Decode stored TBS value \r\n\t\tlet tbsSchema;\r\n\t\t\r\n\t\tif(encodeFlag === false)\r\n\t\t{\r\n\t\t\tif(this.tbs.length === 0) // No stored certificate TBS part\r\n\t\t\t\treturn ResponseData.schema();\r\n\t\t\t\r\n\t\t\ttbsSchema = asn1js.fromBER(this.tbs).result;\r\n\t\t}\r\n\t\t//endregion \r\n\t\t//region Create TBS schema via assembling from TBS parts\r\n\t\telse\r\n\t\t{\r\n\t\t\tconst outputArray = [];\r\n\t\t\t\r\n\t\t\tif(\"version\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ value: this.version })]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(this.responderID instanceof RelativeDistinguishedNames)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID.toSchema()]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\tvalue: [this.responderID]\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\toutputArray.push(new asn1js.GeneralizedTime({ valueDate: this.producedAt }));\r\n\r\n\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\tvalue: Array.from(this.responses, element => element.toSchema())\r\n\t\t\t}));\r\n\t\t\t\r\n\t\t\tif(\"responseExtensions\" in this)\r\n\t\t\t{\r\n\t\t\t\toutputArray.push(new asn1js.Sequence({\r\n\t\t\t\t\tvalue: Array.from(this.responseExtensions, element => element.toSchema())\r\n\t\t\t\t}));\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\ttbsSchema = new asn1js.Sequence({\r\n\t\t\t\tvalue: outputArray\r\n\t\t\t});\r\n\t\t}\r\n\t\t//endregion \r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object \r\n\t\treturn tbsSchema;\r\n\t\t//endregion \r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst _object = {};\r\n\r\n\t\tif(\"version\" in this)\r\n\t\t\t_object.version = this.version;\r\n\r\n\t\tif(\"responderID\" in this)\r\n\t\t\t_object.responderID = this.responderID;\r\n\r\n\t\tif(\"producedAt\" in this)\r\n\t\t\t_object.producedAt = this.producedAt;\r\n\r\n\t\tif(\"responses\" in this)\r\n\t\t\t_object.responses = Array.from(this.responses, element => element.toJSON());\r\n\r\n\t\tif(\"responseExtensions\" in this)\r\n\t\t\t_object.responseExtensions = Array.from(this.responseExtensions, element => element.toJSON());\r\n\r\n\t\treturn _object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}