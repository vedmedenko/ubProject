{"version":3,"sources":["../src/RSASSAPSSParams.js"],"names":["asn1js","RSASSAPSSParams","parameters","hashAlgorithm","defaultValues","maskGenAlgorithm","saltLength","trailerField","fromSchema","schema","asn1","compareSchema","names","blockName","verified","Error","result","valueBlock","valueDec","outputArray","isEqual","push","Constructed","idBlock","tagClass","tagNumber","value","toSchema","Integer","Sequence","object","toJSON","memberName","algorithmId","algorithmParams","Null","name","optional"],"mappings":"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","file":"RSASSAPSSParams.js","sourcesContent":["import * as asn1js from \"asn1js\";\r\nimport { getParametersValue } from \"pvutils\";\r\nimport AlgorithmIdentifier from \"./AlgorithmIdentifier.js\";\r\n//**************************************************************************************\r\n/**\r\n * Class from RFC4055\r\n */\r\nexport default class RSASSAPSSParams\r\n{\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Constructor for RSASSAPSSParams class\r\n\t * @param {Object} [parameters={}]\r\n\t * @property {Object} [schema] asn1js parsed value\r\n\t */\r\n\tconstructor(parameters = {})\r\n\t{\r\n\t\t//region Internal properties of the object\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description Algorithms of hashing (DEFAULT sha1)\r\n\t\t */\r\n\t\tthis.hashAlgorithm = getParametersValue(parameters, \"hashAlgorithm\", RSASSAPSSParams.defaultValues(\"hashAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {AlgorithmIdentifier}\r\n\t\t * @description Algorithm of \"mask generaion function (MGF)\" (DEFAULT mgf1SHA1)\r\n\t\t */\r\n\t\tthis.maskGenAlgorithm = getParametersValue(parameters, \"maskGenAlgorithm\", RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description Salt length (DEFAULT 20)\r\n\t\t */\r\n\t\tthis.saltLength = getParametersValue(parameters, \"saltLength\", RSASSAPSSParams.defaultValues(\"saltLength\"));\r\n\t\t/**\r\n\t\t * @type {number}\r\n\t\t * @description (DEFAULT 1)\r\n\t\t */\r\n\t\tthis.trailerField = getParametersValue(parameters, \"trailerField\", RSASSAPSSParams.defaultValues(\"trailerField\"));\r\n\t\t//endregion\r\n\r\n\t\t//region If input argument array contains \"schema\" for this object\r\n\t\tif(\"schema\" in parameters)\r\n\t\t\tthis.fromSchema(parameters.schema);\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return default values for all class members\r\n\t * @param {string} memberName String name for a class member\r\n\t */\r\n\tstatic defaultValues(memberName)\r\n\t{\r\n\t\tswitch(memberName)\r\n\t\t{\r\n\t\t\tcase \"hashAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t});\r\n\t\t\tcase \"maskGenAlgorithm\":\r\n\t\t\t\treturn new AlgorithmIdentifier({\r\n\t\t\t\t\talgorithmId: \"1.2.840.113549.1.1.8\", // MGF1\r\n\t\t\t\t\talgorithmParams: (new AlgorithmIdentifier({\r\n\t\t\t\t\t\talgorithmId: \"1.3.14.3.2.26\", // SHA-1\r\n\t\t\t\t\t\talgorithmParams: new asn1js.Null()\r\n\t\t\t\t\t})).toSchema()\r\n\t\t\t\t});\r\n\t\t\tcase \"saltLength\":\r\n\t\t\t\treturn 20;\r\n\t\t\tcase \"trailerField\":\r\n\t\t\t\treturn 1;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error(`Invalid member name for RSASSAPSSParams class: ${memberName}`);\r\n\t\t}\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Return value of asn1js schema for current class\r\n\t * @param {Object} parameters Input parameters for the schema\r\n\t * @returns {Object} asn1js schema object\r\n\t */\r\n\tstatic schema(parameters = {})\r\n\t{\r\n\t\t//RSASSA-PSS-params  ::=  Sequence  {\r\n\t\t//    hashAlgorithm      [0] HashAlgorithm DEFAULT sha1Identifier,\r\n\t\t//    maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT mgf1SHA1Identifier,\r\n\t\t//    saltLength         [2] Integer DEFAULT 20,\r\n\t\t//    trailerField       [3] Integer DEFAULT 1  }\r\n\r\n\t\t/**\r\n\t\t * @type {Object}\r\n\t\t * @property {string} [blockName]\r\n\t\t * @property {string} [hashAlgorithm]\r\n\t\t * @property {string} [maskGenAlgorithm]\r\n\t\t * @property {string} [saltLength]\r\n\t\t * @property {string} [trailerField]\r\n\t\t */\r\n\t\tconst names = getParametersValue(parameters, \"names\", {});\r\n\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tname: (names.blockName || \"\"),\r\n\t\t\tvalue: [\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.hashAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [AlgorithmIdentifier.schema(names.maskGenAlgorithm || {})]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.saltLength || \"\") })]\r\n\t\t\t\t}),\r\n\t\t\t\tnew asn1js.Constructed({\r\n\t\t\t\t\tidBlock: {\r\n\t\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t\t},\r\n\t\t\t\t\toptional: true,\r\n\t\t\t\t\tvalue: [new asn1js.Integer({ name: (names.trailerField || \"\") })]\r\n\t\t\t\t})\r\n\t\t\t]\r\n\t\t}));\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert parsed asn1js object into current class\r\n\t * @param {!Object} schema\r\n\t */\r\n\tfromSchema(schema)\r\n\t{\r\n\t\t//region Check the schema is valid\r\n\t\tconst asn1 = asn1js.compareSchema(schema,\r\n\t\t\tschema,\r\n\t\t\tRSASSAPSSParams.schema({\r\n\t\t\t\tnames: {\r\n\t\t\t\t\thashAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"hashAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tmaskGenAlgorithm: {\r\n\t\t\t\t\t\tnames: {\r\n\t\t\t\t\t\t\tblockName: \"maskGenAlgorithm\"\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tsaltLength: \"saltLength\",\r\n\t\t\t\t\ttrailerField: \"trailerField\"\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t);\r\n\r\n\t\tif(asn1.verified === false)\r\n\t\t\tthrow new Error(\"Object's schema was not verified against input data for RSASSA_PSS_params\");\r\n\t\t//endregion\r\n\r\n\t\t//region Get internal properties from parsed schema\r\n\t\tif(\"hashAlgorithm\" in asn1.result)\r\n\t\t\tthis.hashAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.hashAlgorithm });\r\n\r\n\t\tif(\"maskGenAlgorithm\" in asn1.result)\r\n\t\t\tthis.maskGenAlgorithm = new AlgorithmIdentifier({ schema: asn1.result.maskGenAlgorithm });\r\n\r\n\t\tif(\"saltLength\" in asn1.result)\r\n\t\t\tthis.saltLength = asn1.result.saltLength.valueBlock.valueDec;\r\n\r\n\t\tif(\"trailerField\" in asn1.result)\r\n\t\t\tthis.trailerField = asn1.result.trailerField.valueBlock.valueDec;\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convert current object to asn1js object and set correct values\r\n\t * @returns {Object} asn1js object\r\n\t */\r\n\ttoSchema()\r\n\t{\r\n\t\t//region Create array for output sequence\r\n\t\tconst outputArray = [];\r\n\t\t\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 0 // [0]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.hashAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 1 // [1]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [this.maskGenAlgorithm.toSchema()]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 2 // [2]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.saltLength })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t{\r\n\t\t\toutputArray.push(new asn1js.Constructed({\r\n\t\t\t\tidBlock: {\r\n\t\t\t\t\ttagClass: 3, // CONTEXT-SPECIFIC\r\n\t\t\t\t\ttagNumber: 3 // [3]\r\n\t\t\t\t},\r\n\t\t\t\tvalue: [new asn1js.Integer({ value: this.trailerField })]\r\n\t\t\t}));\r\n\t\t}\r\n\t\t//endregion\r\n\t\t\r\n\t\t//region Construct and return new ASN.1 schema for this object\r\n\t\treturn (new asn1js.Sequence({\r\n\t\t\tvalue: outputArray\r\n\t\t}));\r\n\t\t//endregion\r\n\t}\r\n\t//**********************************************************************************\r\n\t/**\r\n\t * Convertion for the class to JSON object\r\n\t * @returns {Object}\r\n\t */\r\n\ttoJSON()\r\n\t{\r\n\t\tconst object = {};\r\n\r\n\t\tif(!this.hashAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"hashAlgorithm\")))\r\n\t\t\tobject.hashAlgorithm = this.hashAlgorithm.toJSON();\r\n\r\n\t\tif(!this.maskGenAlgorithm.isEqual(RSASSAPSSParams.defaultValues(\"maskGenAlgorithm\")))\r\n\t\t\tobject.maskGenAlgorithm = this.maskGenAlgorithm.toJSON();\r\n\r\n\t\tif(this.saltLength !== RSASSAPSSParams.defaultValues(\"saltLength\"))\r\n\t\t\tobject.saltLength = this.saltLength;\r\n\r\n\t\tif(this.trailerField !== RSASSAPSSParams.defaultValues(\"trailerField\"))\r\n\t\t\tobject.trailerField = this.trailerField;\r\n\r\n\t\treturn object;\r\n\t}\r\n\t//**********************************************************************************\r\n}\r\n//**************************************************************************************\r\n"]}